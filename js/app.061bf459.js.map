{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/d3graph.vue?6c43","webpack:///./src/App.vue?54ec","webpack:///./src/App.vue","webpack:///./src/App.vue?bc53","webpack:///./src/App.vue?315a","webpack:///./src/views/2dView.vue","webpack:///./src/components/gSearch.vue","webpack:///src/components/gSearch.vue","webpack:///./src/components/gSearch.vue?1ba9","webpack:///./src/components/gSearch.vue?51a8","webpack:///./src/components/d3graph.vue","webpack:///./src/plugins/d3-context-menu.js","webpack:///src/components/d3graph.vue","webpack:///./src/components/d3graph.vue?e9b3","webpack:///./src/components/d3graph.vue?9067","webpack:///src/views/2dView.vue","webpack:///./src/views/2dView.vue?bd4f","webpack:///./src/views/2dView.vue?6cf6","webpack:///./src/router/index.js","webpack:///./src/store/index.js","webpack:///./src/main.js","webpack:///./src/components/d3graph.vue?be5f","webpack:///./src/views/2dView.vue?39b8","webpack:///./src/components/gSearch.vue?f83b"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","render","_vm","this","_c","_self","_setupProxy","attrs","_m","staticRenderFns","staticStyle","_v","component","staticClass","on","update","names","labels","linkTypes","input","require","results","mounted","$emit","methods","createFilter","queryString","res","toLowerCase","indexOf","searchKeyWords","model","keywords","callback","$$v","expression","_l","index","style","backgroundColor","states","colors","hideNodeOfType","_s","directives","rawName","undefined","selectNodeData","color","slot","btnEdit","properties","item","nodeObjMap","dialogFormVisible","$event","temp","isEdit","$set","cancelEdit","doEdit","_d3","install","d3","contextMenu","menu","openCallback","selectAll","enter","append","attr","select","event","elm","html","list","title","e","action","pageX","pageY","preventDefault","props","type","default","nodes","links","Array","svgDom","nodeState","textState","isNodeClicked","filter","node","id","link","source","target","d3render","stateInit","disabled","computed","isShowNode","isShowText","gDensity","toFixed","gDegree","gMainDegree","gSparsity","Math","log","watch","newData","oldData","d3init","created","beforeDestroy","assign","$message","message","changeTextState","state","text","some","dataset","indexs","map","label","error","clearGraphStyle","_this","remove","svg","scale","transform","k","translate","x","y","addMarkers","forceCollide","radius","iterations","strength","simulation","force","parentElement","clientWidth","clientHeight","join","linksName","size","drag","nodeClick","changeGraphStyle","textBreaking","ticked","min","abs","tanA","angle","atan","PI","d3text","len","topText","substring","midText","botText","topY","midY","botY","cancelBubble","stopPropagation","distance","dragsubject","find","dragstarted","active","alphaTarget","restart","subject","fx","fy","dragged","dragended","defs","components","gSearch","d3graph","json","d3jsonParser","nodeSet","console","toLocaleString","segment","segments","start","identity","end","relationship","Vue","use","VueRouter","routes","path","Home","meta","tile","router","Vuex","Store","mutations","actions","ElementUI","config","productionTip","store","h","App","$mount"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAG/Be,GAAqBA,EAAoBhB,GAE5C,MAAMO,EAASC,OACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrB,IAAO,GAGJK,EAAkB,GAGtB,SAASS,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU6B,QAGnC,IAAIC,EAASF,EAAiB5B,GAAY,CACzCK,EAAGL,EACH+B,GAAG,EACHF,QAAS,IAUV,OANAf,EAAQd,GAAUW,KAAKmB,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAG/DI,EAAOC,GAAI,EAGJD,EAAOD,QAKfH,EAAoBM,EAAIlB,EAGxBY,EAAoBO,EAAIL,EAGxBF,EAAoBQ,EAAI,SAASL,EAASM,EAAMC,GAC3CV,EAAoBW,EAAER,EAASM,IAClC3B,OAAO8B,eAAeT,EAASM,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhEV,EAAoBe,EAAI,SAASZ,GACX,qBAAXa,QAA0BA,OAAOC,aAC1CnC,OAAO8B,eAAeT,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DpC,OAAO8B,eAAeT,EAAS,aAAc,CAAEe,OAAO,KAQvDlB,EAAoBmB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQlB,EAAoBkB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,kBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKxC,OAAOyC,OAAO,MAGvB,GAFAvB,EAAoBe,EAAEO,GACtBxC,OAAO8B,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOlB,EAAoBQ,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRtB,EAAoB0B,EAAI,SAAStB,GAChC,IAAIM,EAASN,GAAUA,EAAOiB,WAC7B,WAAwB,OAAOjB,EAAO,YACtC,WAA8B,OAAOA,GAEtC,OADAJ,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASgB,EAAQC,GAAY,OAAO9C,OAAOC,UAAUC,eAAeC,KAAK0C,EAAQC,IAGzG5B,EAAoB6B,EAAI,IAExB,IAAIC,EAAaC,OAAO,gBAAkBA,OAAO,iBAAmB,GAChEC,EAAmBF,EAAW3C,KAAKsC,KAAKK,GAC5CA,EAAW3C,KAAOf,EAClB0D,EAAaA,EAAWG,QACxB,IAAI,IAAItD,EAAI,EAAGA,EAAImD,EAAWjD,OAAQF,IAAKP,EAAqB0D,EAAWnD,IAC3E,IAAIU,EAAsB2C,EAI1BzC,EAAgBJ,KAAK,CAAC,EAAE,kBAEjBM,K,sGCvJT,W,yDCAA,W,gFCAIyC,G,UAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAUF,EAAIG,MAAMC,YAAY,OAAOF,EAAG,MAAM,CAACG,MAAM,CAAC,GAAK,QAAQ,CAACL,EAAIM,GAAG,GAAGJ,EAAG,gBAAgB,KAExJK,EAAkB,CAAC,WAAY,IAAIP,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAUF,EAAIG,MAAMC,YAAY,OAAOF,EAAG,MAAM,CAACG,MAAM,CAAC,GAAK,QAAQ,CAACH,EAAG,MAAM,CAACG,MAAM,CAAC,GAAK,WAAW,CAACH,EAAG,OAAO,CAACM,YAAY,CAAC,YAAY,OAAO,MAAQ,MAAM,cAAc,OAAO,cAAc,QAAQ,CAACR,EAAIS,GAAG,qD,4CCFuD,I,wBCQpUC,EAAY,eACd,EACAX,EACAQ,GACA,EACA,KACA,KACA,MAIa,EAAAG,E,oBCnBXX,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACS,YAAY,cAAc,CAACT,EAAG,UAAU,CAACU,GAAG,CAAC,QAAUZ,EAAIa,UAAUX,EAAG,UAAU,CAACG,MAAM,CAAC,KAAOL,EAAI9D,KAAK,MAAQ8D,EAAIc,MAAM,OAASd,EAAIe,OAAO,UAAYf,EAAIgB,cAAc,IAEvPT,EAAkB,GCFlBR,G,UAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,SAElEK,EAAkB,GCKP,GACfjC,KAAA,UACApC,OACA,OACA+E,MAAA,GACAhC,KAAA,IAEA/C,KAAAgF,EAAA,QACAC,QAAA,KAGAC,UACA,KAAAC,MAAA,eAAAnF,OAEAoF,QAAA,CACAC,aAAAC,GACA,OAAAC,IACA,IAAAA,EAAA1C,MAAA2C,cAAAC,QAAAH,EAAAE,kBCxBgV,ICQ5U,G,UAAY,eACd,EACA,EACA,GACA,EACA,KACA,WACA,OAIa,I,QCnBX3B,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACA,EAAG,MAAM,CAACG,MAAM,CAAC,GAAK,SAAS,CAACH,EAAG,MAAM,CAACS,YAAY,SAASH,YAAY,CAAC,gBAAgB,UAAUN,EAAG,KAAK,CAACM,YAAY,CAAC,MAAQ,YAAY,CAACR,EAAIS,GAAG,YAAYP,EAAG,WAAW,CAACM,YAAY,CAAC,MAAQ,MAAM,gBAAgB,QAAQH,MAAM,CAAC,UAAY,GAAG,YAAc,WAAWO,GAAG,CAAC,MAAQZ,EAAI4B,gBAAgBC,MAAM,CAAC9C,MAAOiB,EAAI8B,SAAUC,SAAS,SAAUC,GAAMhC,EAAI8B,SAASE,GAAKC,WAAW,cAAc/B,EAAG,MAAM,CAACG,MAAM,CAAC,GAAK,eAAeL,EAAIkC,GAAIlC,EAAIc,OAAO,SAASxC,EAAK6D,GAAO,OAAOjC,EAAG,MAAM,CAACb,IAAI8C,GAAO,CAACjC,EAAG,OAAO,CAACM,YAAY,CAAC,OAAS,WAAW4B,MAAO,CAAEC,gBAAuC,OAAtBrC,EAAIsC,OAAOH,GAAkBnC,EAAIuC,OAAOJ,GAAS,QAAU9B,MAAM,CAAC,aAAaL,EAAIsC,OAAOH,GAAO,aAAaA,GAAOvB,GAAG,CAAC,MAAQZ,EAAIwC,kBAAkBxC,EAAIS,GAAG,IAAIT,EAAIyC,GAAGnE,GAAM,UAAS,IAAI,GAAG4B,EAAG,MAAM,CAACG,MAAM,CAAC,GAAK,MAAM,MAAQ,OAAO,OAAS,UAAUH,EAAG,MAAM,CAACwC,WAAW,CAAC,CAACpE,KAAK,OAAOqE,QAAQ,SAAS5D,WAAmC6D,IAA5B5C,EAAI6C,eAAevE,KAAoB2D,WAAW,sCAAsC5B,MAAM,CAAC,GAAK,SAAS,CAACH,EAAG,UAAU,CAACS,YAAY,YAAYH,YAAY,CAAC,cAAc,SAAS,YAAY,QAAQ4B,MAAO,CAAEC,gBAAiBrC,EAAI6C,eAAeC,QAAS,CAAC5C,EAAG,MAAM,CAACS,YAAY,WAAWN,MAAM,CAAC,KAAO,UAAU0C,KAAK,UAAU,CAAC7C,EAAG,OAAO,CAACF,EAAIS,GAAGT,EAAIyC,GAAGzC,EAAI6C,eAAevE,SAAS4B,EAAG,YAAY,CAACM,YAAY,CAAC,MAAQ,QAAQ,QAAU,QAAQ,MAAQ,UAAU,YAAY,QAAQH,MAAM,CAAC,KAAO,QAAQO,GAAG,CAAC,MAAQZ,EAAIgD,UAAU,CAAChD,EAAIS,GAAG,SAAS,GAAGT,EAAIkC,GAAIlC,EAAI6C,eAAeI,YAAY,SAASC,EAAK7D,GAAK,OAAOa,EAAG,MAAM,CAACb,IAAI6D,GAAM,CAAChD,EAAG,OAAO,CAACM,YAAY,CAAC,eAAe,QAAQ,CAACR,EAAIS,GAAGT,EAAIyC,IAAIzC,EAAImD,WAAW9D,GAAOW,EAAImD,WAAW9D,GAAOA,GAAO,QAAQa,EAAG,OAAO,CAACM,YAAY,CAAC,aAAa,SAAS,CAACN,EAAG,IAAI,CAACF,EAAIS,GAAGT,EAAIyC,GAAGS,cAAgB,IAAI,GAAGhD,EAAG,YAAY,CAACG,MAAM,CAAC,QAAUL,EAAIoD,mBAAmBxC,GAAG,CAAC,iBAAiB,SAASyC,GAAQrD,EAAIoD,kBAAkBC,KAAU,CAACnD,EAAG,UAAU,CAACM,YAAY,CAAC,MAAQ,QAAQ,cAAc,QAAQH,MAAM,CAAC,MAAQL,EAAIsD,KAAK,iBAAiB,QAAQ,cAAc,SAAStD,EAAIkC,GAAIlC,EAAIsD,MAAM,SAASvE,EAAMM,GAAK,OAAOa,EAAG,eAAe,CAACb,IAAIA,EAAIgB,MAAM,CAAC,MAAQL,EAAImD,WAAW9D,GAAOW,EAAImD,WAAW9D,GAAOA,IAAM,CAACa,EAAG,WAAW,CAACG,MAAM,CAAC,UAAYL,EAAIuD,QAAQ1B,MAAM,CAAC9C,MAAOiB,EAAIsD,KAAKjE,GAAM0C,SAAS,SAAUC,GAAMhC,EAAIwD,KAAKxD,EAAIsD,KAAMjE,EAAK2C,IAAMC,WAAW,gBAAgB,MAAK,GAAG/B,EAAG,MAAM,CAACS,YAAY,gBAAgBN,MAAM,CAAC,KAAO,UAAU0C,KAAK,UAAU,CAAC7C,EAAG,YAAY,CAACU,GAAG,CAAC,MAAQZ,EAAIyD,aAAa,CAACzD,EAAIS,GAAG,UAAUP,EAAG,YAAY,CAACG,MAAM,CAAC,KAAO,WAAWO,GAAG,CAAC,MAAQZ,EAAI0D,SAAS,CAAC1D,EAAIS,GAAG,WAAW,IAAI,IAAI,IAE7jFF,EAAkB,G,YCFtB,IAAIoD,EAAM,KAEV,SAASC,EAASC,GAChBF,EAAME,EACNF,EAAIG,YAAcA,EAEpB,MAAMA,EAAc,SAAUC,EAAMC,GAalC,OAXAL,EAAIM,UAAU,oBAAoB/H,KAAK,CAAC,IACrCgI,QACAC,OAAO,OACPC,KAAK,QAAS,mBAGjBT,EAAIU,OAAO,QAAQzD,GAAG,yBAAyB,WAC7C+C,EAAIU,OAAO,oBAAoBjC,MAAM,UAAW,WAI3C,SAAUkC,EAAOpI,GAGtB,IAAIqI,EAAMtE,KAEV0D,EAAIM,UAAU,oBAAoBO,KAAK,IACvC,IAAIC,EAAOd,EAAIM,UAAU,oBAAoBE,OAAO,MACpDM,EAAKR,UAAU,MAAM/H,KAAK6H,GAAMG,QAC7BC,OAAO,MACPK,MAAK,SAAUnG,GACd,OAAOA,EAAEqG,SAEV9D,GAAG,SAAS,SAAU+D,EAAGtG,GAExBA,EAAEuG,OAAOL,EAAKrI,GACdyH,EAAIU,OAAO,oBAAoBjC,MAAM,UAAW,WAKhD4B,GAAcA,EAAa9H,GAG/ByH,EAAIU,OAAO,oBACRjC,MAAM,OAASkC,EAAMO,MAAQ,EAAK,MAClCzC,MAAM,MAAQkC,EAAMQ,MAAQ,EAAK,MACjC1C,MAAM,UAAW,SAEpBkC,EAAMS,mBAIKnB,QCoEfA,EAAAC,GACe,OACfvF,KAAA,UACA0G,MAAA,CACA9I,KAAA,CACA+I,KAAAtI,OACAuI,QAAA,WACA,OACAC,MAAA,GACAC,MAAA,MAQAtE,MAAA,CACAmE,KAAAI,OAEAtE,OAAAsE,MACArE,UAAAqE,OAEAnJ,OACA,OACAoJ,OAAA,KACAxD,SAAA,GACAyD,UAAA,EAEAC,UAAA,EAEAL,MAAA,GACAC,MAAA,GAKA7C,OAAA,CACA,8BACA,8BACA,8BACA,8BACA,+BAEAD,OAAA,2FACAO,eAAA,GACA4C,eAAA,EAKA1B,KAAA,CACA,CACAW,MAAA,OACAE,QAAAL,EAAAlG,KAGA,KAAA8G,MAAA,KAAAA,MAAAO,OAAAC,GACAA,EAAAC,KAAAvH,EAAAuH,IAIA,KAAAR,MAAA,KAAAA,MAAAM,OAAAG,GACAA,EAAAC,OAAAF,KAAAvH,EAAAuH,IAAAC,EAAAE,OAAAH,KAAAvH,EAAAuH,IAGA,KAAAI,WACA,KAAAC,aAEAC,UAAA,GAEA,CACAxB,MAAA,UACAE,QAAAL,EAAAlG,KAGA,KAAA8G,MAAA,KAAAjJ,KAAAiJ,MAAAO,OAAAC,IACA,GAAAA,EAAAC,KAAAvH,EAAAuH,GAAA,SAEA,QAAApJ,EAAA,EAAAA,EAAA,KAAAN,KAAAkJ,MAAA1I,OAAAF,IAAA,CAEA,QAAAN,KAAAkJ,MAAA5I,GAAAsJ,OAAAF,KAAAD,EAAAC,IAAA,KAAA1J,KAAAkJ,MAAA5I,GAAAuJ,OAAAH,KAAAvH,EAAAuH,GACA,SAEA,QAAA1J,KAAAkJ,MAAA5I,GAAAuJ,OAAAH,KAAAD,EAAAC,IAAA,KAAA1J,KAAAkJ,MAAA5I,GAAAsJ,OAAAF,KAAAvH,EAAAuH,GACA,SAGA,WAIA,KAAAR,MAAA,KAAAlJ,KAAAkJ,MAAAM,OAAAG,GACAA,EAAAC,OAAAF,KAAAvH,EAAAuH,IAAAC,EAAAE,OAAAH,KAAAvH,EAAAuH,IAGA,KAAAI,WACA,KAAAC,cAGA,CACAvB,MAAA,WACAE,QAAAL,EAAAlG,KACA,KAAA8G,MAAA,KAAAjJ,KAAAiJ,MAEA,KAAAC,MAAA,KAAAlJ,KAAAkJ,MACA,KAAAY,WACA,KAAAC,eAIA3C,KAAA,GACAF,mBAAA,EACAG,QAAA,EAEAJ,WAAA,CACA,eACA,eACA,mBACA,YACA,qBAIAgD,SAAA,CACAC,WAAA,WAEA,gBAAAb,WAEAc,WAAA,WAEA,gBAAAb,WAEAc,WACA,YAAAnB,MAAAzI,QAAA,UAAA0I,MAAA1I,QAAA,KAAAyI,MAAAzI,QAAA,KAAAyI,MAAAzI,OAAA,KAAA6J,QAAA,IAEAC,UACA,YAAApB,MAAA1I,OAAA,KAAAyI,MAAAzI,QAAA6J,QAAA,IAGAE,gBAWAC,YACA,YAAAtB,MAAA1I,QAAA,KAAAyI,MAAAzI,OAAAiK,KAAAC,IAAA,KAAAzB,MAAAzI,UAAA6J,QAAA,KAGAM,MAAA,CAEA3K,KAAA4K,EAAAC,GAGA,KAAAzB,OAAA1E,GAAA,UACA,KAAA0E,OAAArB,UAAA,KAAArD,GAAA,UACA,KAAAoG,WAGAC,YAIA7F,UACA,KAAA4F,UAEAE,gBAEA,KAAA5B,OAAA1E,GAAA,UACA,KAAA0E,OAAArB,UAAA,KAAArD,GAAA,WAEAU,QAAA,CAEA0B,UACA,KAAAM,KAAA3G,OAAAwK,OAAA,QAAAtE,eAAAI,YACA,KAAAG,mBAAA,GAGAM,SAEA,IAAAlH,EAAA,EAEA,KAAAqG,eAAAvE,KAAA,KAAAgF,KAAAhF,KACA,KAAAuE,eAAAI,WAAA,KAAAK,KACA,QAAAqC,KAAA,KAAAzJ,KAAAiJ,MAIAQ,EAAAC,IAAA,KAAA/C,eAAA+C,KAGA,KAAA1J,KAAAiJ,MAAA3I,GAAAyG,WAAA,KAAAK,KACA,KAAA6B,MAAA3I,GAAAyG,WAAA,KAAAK,MAGA9G,IAEA,KAAA4G,mBAAA,EACA,KAAA4D,SACA,KAAAI,SAAA,CACAC,QAAA,OACApC,KAAA,aAGAxB,aACA,KAAAL,mBAAA,GAGAkE,gBAAAC,GAEA,QAAA/B,YAAA+B,EAAA,CACA,KAAA/B,UAAA+B,EAEA,MAAAC,EAAA3D,eAAA,mBAIA,SAAA2B,UACAgC,EAAApF,MAAA,kBAkBAoF,EAAApF,MAAA,qBAQAI,eAAA8B,GAEA,QAAAa,MAAAzI,SAAA,KAAAR,KAAAiJ,MAAAzI,QACA,KAAA4F,OAAAmF,KAAAF,GAAA,QAAAA,GAAA,CAEA,MAAApF,EAAAmC,EAAAyB,OAAA2B,QAAAvF,MACAoF,EAAAjD,EAAAyB,OAAA2B,QAAAH,MAIA,OAAAA,EAGA,KAAA/D,KAAA,KAAAlB,OAAAH,EAAA,OAGA,KAAAqB,KAAA,KAAAlB,OAAAH,EAAA,MAKA,MAAAwF,EAAA,KAAArF,OAAAsF,IAAA9J,GACA,OAAAA,EACA,IAEA,KAIA,KAAAqH,MAAA,KAAAjJ,KAAAiJ,MAAAO,OAAAC,IACA,QAAAnJ,EAAA,EAAAA,EAAAmL,EAAAjL,OAAAF,IACA,GAAAmJ,EAAAkC,QAAA,KAAA9G,OAAAvE,IAAA,MAAAmL,EAAAnL,GAAA,SAEA,WAGA,KAAA4I,MAAA,KAAAlJ,KAAAkJ,MAAAM,OAAAG,IACA,QAAArJ,EAAA,EAAAA,EAAAmL,EAAAjL,OAAAF,IAAA,CACA,OAAAA,GAAA,MAAAmL,EAAAnL,GAAA,SACA,GAAAqJ,EAAAZ,OAAA,KAAAjE,UAAAxE,IAAA,MAAAmL,EAAAnL,GAAA,SAEA,WAQA,KAAAwJ,gBAEA,KAAAoB,SAAAU,MAAA,kBAMAlG,eAAA7C,GAEA,aAAA+C,SACA,KAAAiG,sBAGA,CACA,IAAAzJ,EAAA,KAAAwD,SAEA,KAAAwD,OAAAjB,OAAA,UAAAJ,UAAA,UAAAG,KAAA,QAAA/F,IAEA,GAAAA,EAAA4E,WAAA3E,KAAAqD,QAAArD,IAAA,EACA,cAKA,QAAA9B,EAAA,EAAAA,EAAA,KAAA4I,MAAA1I,OAAAF,IAAA,CAEA,QAAA4I,MAAA5I,GAAA,UAAAyG,WAAA3E,KAAAqD,QAAArD,IAAA,GACA,KAAA8G,MAAA5I,GAAA,UAAAoJ,IAAAvH,EAAAuH,GACA,eAGA,QAAAR,MAAA5I,GAAA,UAAAyG,WAAA3E,KAAAqD,QAAArD,IAAA,GACA,KAAA8G,MAAA5I,GAAA,UAAAoJ,IAAAvH,EAAAuH,GACA,eAGA,mBAIA,KAAAN,OAAAjB,OAAA,UAAAJ,UAAA,QAAAG,KAAA,QAAA/F,IACA,GAAAA,EAAA4E,WAAA3E,KAAAqD,QAAArD,IAAA,EACA,SAIA,QAAA9B,EAAA,EAAAA,EAAA,KAAA4I,MAAA1I,OAAAF,IAAA,CAEA,QAAA4I,MAAA5I,GAAA,UAAAyG,WAAA3E,KAAAqD,QAAArD,IAAA,GACA,KAAA8G,MAAA5I,GAAA,UAAAoJ,IAAAvH,EAAAuH,GACA,SAGA,QAAAR,MAAA5I,GAAA,UAAAyG,WAAA3E,KAAAqD,QAAArD,IAAA,GACA,KAAA8G,MAAA5I,GAAA,UAAAoJ,IAAAvH,EAAAuH,GACA,SAGA,mBAKA,KAAAN,OAAAjB,OAAA,UAAAJ,UAAA,QAAAG,KAAA,QAAA/F,GACAA,EAAAyH,OAAA7C,WAAA3E,KAAAqD,QAAArD,IAAA,GACAD,EAAA0H,OAAA9C,WAAA3E,KAAAqD,QAAArD,IAAA,EAEA,GAEA,YAIA,KAAAgH,OAAAjB,OAAA,cAAAJ,UAAA,QAAAG,KAAA,QAAA/F,GACAA,EAAAyH,OAAA7C,WAAA3E,KAAAqD,QAAArD,IAAA,GACAD,EAAA0H,OAAA9C,WAAA3E,KAAAqD,QAAArD,IAAA,EAEA,GAEA,cAMA0I,SACA,KAAA5B,MAAA,KAAAlJ,KAAAkJ,MACA,KAAAD,MAAA,KAAAjJ,KAAAiJ,MACA,KAAAG,OAAAzB,YAAA,QAIA,KAAAoC,YACA,KAAAD,YAGAC,YACA,KAAAV,UAAA,EACA,KAAAC,UAAA,EAGA,MAAAmC,EAAA,KAAArF,OAAAsF,IAAA9J,GACA,OAAAA,EACA,IAEA,KAIA,KAAAqH,MAAA,KAAAjJ,KAAAiJ,MAAAO,OAAAC,IACA,QAAAnJ,EAAA,EAAAA,EAAAmL,EAAAjL,OAAAF,IACA,GAAAmJ,EAAAkC,QAAA,KAAA9G,OAAAvE,IAAA,MAAAmL,EAAAnL,GAAA,SAEA,WAGA,KAAA4I,MAAA,KAAAlJ,KAAAkJ,MAAAM,OAAAG,IACA,QAAArJ,EAAA,EAAAA,EAAAmL,EAAAjL,OAAAF,IAAA,CACA,OAAAA,GAAA,MAAAmL,EAAAnL,GAAA,SACA,GAAAqJ,EAAAZ,OAAA,KAAAjE,UAAAxE,IAAA,MAAAmL,EAAAnL,GAAA,SAEA,WAEA,KAAAwJ,YAEAA,WACA,IAAAgC,EAAA,KAGAA,EAAA1C,OAAArB,UAAA,KAAAgE,SAGA,IAAAC,EAAAF,EAAA1C,OACA1E,GAAA,aAEA,KAAA6E,eAAA,EAEA,KAAAsC,kBAEA,UAAAjG,UACA,KAAAF,mBAIA9E,KAAA+G,YAAAjD,GAAA,OAAA0D,IAEA,IAAA6D,EAAA7D,EAAA8D,UAAAC,EACAC,EAAA,CAAAhE,EAAA8D,UAAAG,EAAAjE,EAAA8D,UAAAI,GAWAN,EAAA9D,KAAA,yBAAAkE,EAAA,QAAAA,EAAA,cAAAH,EAAA,QAEAhE,OAAA,KACAC,KAAA,gBACAA,KAAA,iBAEA,KAAAqE,aAaA,IAAAC,EAAA7E,oBACA8E,OAAAtK,GAAA,IACAuK,WAAA,KACAC,SAAA,KAGAC,EAAAjF,qBAAA,KAAAsB,OACA4D,MAAA,OAAAlF,iBAAA+B,GAAAvH,KAAAuH,KACAmD,MAAA,SAAAlF,qBAAAgF,UAAA,MAEAE,MAAA,SAAAlF,iBAAAqE,EAAAvC,OAAAqD,cAAAC,YAAA,EAAAf,EAAAvC,OAAAqD,cAAAE,aAAA,IACAH,MAAA,YAAAL,GAKA7C,EAAAqC,EAAA/D,OAAA,KACAC,KAAA,iBACAH,UAAA,QACA/H,KAAA,KAAAkJ,OAAAlB,QACAC,OAAA,QACAC,KAAA,yBAAA/F,GAEA,YAEA8K,KAAA,QACA/E,KAAA,gCAEAgF,EAAAlB,EAAA/D,OAAA,KACAC,KAAA,qBACAH,UAAA,QACA/H,KAAA,KAAAkJ,OACA+D,KAAA,QACA/G,MAAA,wBACAA,MAAA,eACAA,MAAA,oBAEAoF,KAAAnJ,KAAA4E,WAAA3E,MAWAqH,EAAAuC,EAAA/D,OAAA,KACAC,KAAA,iBACAH,UAAA,UACA/H,KAAA,KAAAiJ,OAAAjB,QACAC,OAAA,UAAAC,KAAA,cAAA/F,GAGA,IAAAgL,EAAA,GACA,OAAAhL,EAAAwJ,OACA,KAAAG,EAAAjH,OAAA,SACA,KAAAiH,EAAAjH,OAAA,GAAAsI,EAAA,SACA,KAAArB,EAAAjH,OAAA,GAAAsI,EAAA,SACA,QAAAA,EAAA,SAEA,SAAAA,KAEAjF,KAAA,OAAA/F,IACA,QAAA7B,EAAA,EAAAA,EAAA,KAAAuE,OAAArE,OAAAF,IACA,GAAA6B,EAAAwJ,QAAA,KAAA9G,OAAAvE,GAAA,YAAA+F,OAAA/F,KAGA4H,KAAA,iBACAA,KAAA,OAAA/F,KAAA4E,WAAA3E,MACA8F,KAAA,KAAA/F,KAAAuH,IACA9I,KAAA,KAAAwM,KAAAR,IACAlI,GAAA,QAAA2I,GACA3I,GAAA,uBAAA0D,GAEA,MAAAqB,EAAA9B,YAAA,MAKA,IAAAvF,EAAAqH,EAAAvB,KAAA,QACAwB,EAAAD,EAAAvB,KAAA,MACAtB,EAAA6C,EAAAvB,KAAA,QAGA4D,EAAAxE,KAAAwE,EAAAnF,eAAA,KAAA+C,GACAoC,EAAAxE,KAAAwE,EAAAnF,eAAA,OAAAvE,GACA0J,EAAAxE,KAAAwE,EAAAnF,eAAA,QAAAC,GAGA,QAAAI,KAAA8E,EAAA7C,MACAjC,EAAA0C,OAEAoC,EAAAxE,KAAAwE,EAAAnF,eAAA,aAAAK,EAAAD,YAIA+E,EAAAwB,iBAAAlL,MAEAsC,GAAA,aAAA0D,IAEA,KAAAmB,gBACA,KAAAsC,kBAEA,UAAAjG,UACA,KAAAF,oBAIAhB,GAAA,cAAAiD,iBAAA,KAAAE,OAeAyD,EAAAU,EAAA/D,OAAA,KACAC,KAAA,iBACAH,UAAA,QACA/H,KAAA,KAAAiJ,OACAjB,QACAC,OAAA,QAAAC,KAAA,oBACAA,KAAA,mBACAA,KAAA,OAAA/F,KAAA4E,WAAA3E,MACA8F,KAAA,wBACAA,KAAA,cAAA/F,GACA,OAAAoL,EAAA5F,YAAA,MAAAxF,EAAA4E,WAAA3E,SAEAxB,KAAA,KAAAwM,KAAAR,IACAlI,GAAA,QAAA2I,GACA3I,GAAA,uBAAA0D,GAEA,MAAAkD,EAAA3D,YAAA,MAGA,IAAAvF,EAAAkJ,EAAApD,KAAA,QACA4D,EAAAxE,KAAAwE,EAAAnF,eAAA,OAAAvE,GAGA,QAAA4E,KAAA8E,EAAA7C,MACA,GAAAjC,EAAAD,WAAA3E,QAAA,CAEA0J,EAAAxE,KAAAwE,EAAAnF,eAAA,KAAAK,EAAA0C,IACAoC,EAAAxE,KAAAwE,EAAAnF,eAAA,aAAAK,EAAAD,YAEA,IAAAd,EAAA,EACA,OAAAe,EAAA2E,OACA,KAAAG,EAAAjH,OAAA,SACA,KAAAiH,EAAAjH,OAAA,GAAAoB,EAAA,QACA,KAAA6F,EAAAjH,OAAA,GAAAoB,EAAA,QACA,QAAAA,EAAA,QAEA6F,EAAAxE,KAAAwE,EAAAnF,eAAA,QAAAmF,EAAAzF,OAAAJ,IAGA6F,EAAAwB,iBAAAlL,MAEAsC,GAAA,aAAA0D,IACA,KAAAmB,gBACA,KAAAsC,kBAEA,UAAAjG,UACA,KAAAF,oBAIAhB,GAAA,cAAAiD,iBAAA,KAAAE,OAqCA,SAAA2F,IACA7D,EACAzB,KAAA,KAAA/F,KAAAyH,OAAAyC,GACAnE,KAAA,KAAA/F,KAAAyH,OAAA0C,GACApE,KAAA,KAAA/F,KAAA0H,OAAAwC,GACAnE,KAAA,KAAA/F,KAAA0H,OAAAyC,GAEAY,EACAhF,KAAA,YAAA/F,IACA,IAAAkK,EAAA5B,KAAAgD,IAAAtL,EAAAyH,OAAAyC,EAAAlK,EAAA0H,OAAAwC,GAAA5B,KAAAiD,IAAAvL,EAAAyH,OAAAyC,EAAAlK,EAAA0H,OAAAwC,GAAA,EACAC,EAAA7B,KAAAgD,IAAAtL,EAAAyH,OAAA0C,EAAAnK,EAAA0H,OAAAyC,GAAA7B,KAAAiD,IAAAvL,EAAAyH,OAAA0C,EAAAnK,EAAA0H,OAAAyC,GAAA,IAGAqB,EAAAlD,KAAAiD,IAAAvL,EAAAyH,OAAA0C,EAAAnK,EAAA0H,OAAAyC,GAAA7B,KAAAiD,IAAAvL,EAAAyH,OAAAyC,EAAAlK,EAAA0H,OAAAwC,GACAuB,EAAAnD,KAAAoD,KAAAF,GAAAlD,KAAAqD,GAAA,IAgBA,OAZA3L,EAAAyH,OAAAyC,EAAAlK,EAAA0H,OAAAwC,EAEAlK,EAAAyH,OAAA0C,GAAAnK,EAAA0H,OAAAyC,IACAsB,MAKAzL,EAAAyH,OAAA0C,EAAAnK,EAAA0H,OAAAyC,IAEAsB,MAEA,aAAAvB,EAAA,IAAAC,EAAA,WAAAsB,EAAA,MAGAnE,EACAvB,KAAA,KAAA/F,KAAAkK,GACAnE,KAAA,KAAA/F,KAAAmK,GAEAhB,EAAApD,KAAA,sBAAA/F,GACA,IAAAgL,EAAA,GACA,OAAAhL,EAAAwJ,OACA,KAAAG,EAAAjH,OAAA,SACA,KAAAiH,EAAAjH,OAAA,GAAAsI,EAAA,SACA,KAAArB,EAAAjH,OAAA,GAAAsI,EAAA,SACA,QAAAA,EAAA,SAGA,OADAA,GAAA,EACA,cAAAhL,EAAAkK,EAAAc,EAAA,UAAAhL,EAAAmK,EAAAa,EAAA,UAWA,SAAAI,EAAAQ,EAAAzC,GACA,MAAA0C,EAAA1C,EAAA9K,OACA,GAAAwN,GAAA,EACAD,EAAA9F,OAAA,SACAC,KAAA,OACAA,KAAA,OACAoD,YACA,CACA,MAAA2C,EAAA3C,EAAA4C,UAAA,KACAC,EAAA7C,EAAA4C,UAAA,KACA,IAAAE,EAAA9C,EAAA4C,UAAA,EAAAF,GACAK,GAAA,GACAC,EAAA,EACAC,EAAA,GACAP,GAAA,GACAK,GAAA,GACAC,GAAA,IACAN,EAAA,KACAI,EAAA9C,EAAA4C,UAAA,YAGAH,EAAAzC,KAAA,IACAyC,EAAA9F,OAAA,SACAC,KAAA,OACAA,KAAA,IAAAmG,GACA/C,MAAA,WACA,OAAA2C,KAEAF,EAAA9F,OAAA,SACAC,KAAA,OACAA,KAAA,IAAAoG,GACAhD,MAAA,WACA,OAAA6C,KAEAJ,EAAA9F,OAAA,SACAC,KAAA,OACAA,KAAA,IAAAqG,GACAjD,MAAA,WACA,OAAA8C,MAQA,SAAAf,EAAAjF,EAAAjG,GAgBAiG,EAAAoG,cAAA,EACApG,EAAAqG,kBAEA,MAAArM,EAAA0J,EAAAnF,eAAAvE,KAIA,OAHA0J,EAAAvC,eAAA,EACAuC,EAAAwB,iBAAAlL,IAEA,EA3JAqH,EAAAxB,OAAA,SAAAqD,KAAAnJ,KAAA4E,WAAA3E,MAGAwK,EAAAlI,GAAA,OAAA8I,GAEAZ,EAAAC,MAAA,QACA3D,MAAA,KAAAA,OACAwF,SAAAvM,IACA,IAAAuM,EAAA,GACA,OAAAvM,EAAAyH,OAAA+B,OACA,KAAAG,EAAAjH,OAAA,GAAA6J,GAAA,SACA,KAAA5C,EAAAjH,OAAA,GAAA6J,GAAA,SACA,KAAA5C,EAAAjH,OAAA,GAAA6J,GAAA,SACA,QAAAA,GAAA,SAEA,OAAAvM,EAAA0H,OAAA8B,OACA,KAAAG,EAAAjH,OAAA,GAAA6J,GAAA,SACA,KAAA5C,EAAAjH,OAAA,GAAA6J,GAAA,SACA,KAAA5C,EAAAjH,OAAA,GAAA6J,GAAA,SACA,QAAAA,GAAA,SAEA,SAAAA,KA0IApB,iBAAAlL,GAGA,KAAAgH,OAAAjB,OAAA,UAAAJ,UAAA,UAAAG,KAAA,QAAA/F,IAEA,GAAAA,EAAA4E,WAAA3E,QACA,cAMA,QAAA9B,EAAA,EAAAA,EAAA,KAAA4I,MAAA1I,OAAAF,IAAA,CAEA,QAAA4I,MAAA5I,GAAA,UAAAyG,WAAA3E,SAAA,KAAA8G,MAAA5I,GAAA,UAAAoJ,IAAAvH,EAAAuH,GACA,eAEA,QAAAR,MAAA5I,GAAA,UAAAyG,WAAA3E,SAAA,KAAA8G,MAAA5I,GAAA,UAAAoJ,IAAAvH,EAAAuH,GACA,eAGA,YAAAH,cAAA,gBAIA,KAAAH,OAAAjB,OAAA,UAAAJ,UAAA,QACAG,KAAA,QAAA/F,IAEA,GAAAA,EAAA4E,WAAA3E,QACA,SAMA,QAAA9B,EAAA,EAAAA,EAAA,KAAA4I,MAAA1I,OAAAF,IAAA,CAEA,QAAA4I,MAAA5I,GAAA,UAAAyG,WAAA3E,SAAA,KAAA8G,MAAA5I,GAAA,UAAAoJ,IAAAvH,EAAAuH,GACA,SAEA,QAAAR,MAAA5I,GAAA,UAAAyG,WAAA3E,SAAA,KAAA8G,MAAA5I,GAAA,UAAAoJ,IAAAvH,EAAAuH,GACA,SAGA,YAAAH,cAAA,gBAIA,KAAAH,OAAAjB,OAAA,UAAAJ,UAAA,QACAG,KAAA,QAAA/F,GACAA,EAAAyH,OAAA7C,WAAA3E,SAAAD,EAAA0H,OAAA9C,WAAA3E,QACA,SAEA,KAAAmH,cAAA,eAGArB,KAAA,aAAA/F,GACAA,EAAAyH,OAAA7C,WAAA3E,SAAAD,EAAA0H,OAAA9C,WAAA3E,QACA,qBAEA,mBAIA,KAAAgH,OAAAjB,OAAA,cAAAJ,UAAA,QACAG,KAAA,QAAA/F,GACAA,EAAAyH,OAAA7C,WAAA3E,SAAAD,EAAA0H,OAAA9C,WAAA3E,QACA,SAEA,KAAAmH,cAAA,gBAIAsC,kBAEA,KAAAzC,OAAAjB,OAAA,UAAAJ,UAAA,UAAAG,KAAA,YACA,KAAAkB,OAAAjB,OAAA,UAAAJ,UAAA,QAAAG,KAAA,YACA,KAAAkB,OAAAjB,OAAA,UAAAJ,UAAA,QAAAG,KAAA,YAAAA,KAAA,gCACA,KAAAkB,OAAAjB,OAAA,cAAAJ,UAAA,QAAAG,KAAA,aAGAkF,KAAAR,GACA,SAAA+B,EAAAvG,GACA,OAAAwE,EAAAgC,KAAAxG,EAAAiE,EAAAjE,EAAAkE,GAGA,SAAAuC,EAAAzG,GACAA,EAAA0G,QAAAlC,EAAAmC,YAAA,IAAAC,UACA5G,EAAA6G,QAAAC,GAAA9G,EAAA6G,QAAA5C,EACAjE,EAAA6G,QAAAE,GAAA/G,EAAA6G,QAAA3C,EAGA,SAAA8C,EAAAhH,GACAA,EAAA6G,QAAAC,GAAA9G,EAAAiE,EACAjE,EAAA6G,QAAAE,GAAA/G,EAAAkE,EAGA,SAAA+C,EAAAjH,GACAA,EAAA0G,QAAAlC,EAAAmC,YAAA,GAMA,OAAApH,YACAsH,QAAAN,GACAjK,GAAA,QAAAmK,GACAnK,GAAA,OAAA0K,GACA1K,GAAA,MAAA2K,IAGA9C,aAEA,IAAA+C,EAAA,KAAAlG,OAAAnB,OAAA,QACAqH,EAAArH,OAAA,UACAC,KAAA,kBACAA,KAAA,iBACAA,KAAA,kBACAA,KAAA,6BACAA,KAAA,gCACAA,KAAA,wBACAA,KAAA,WACAA,KAAA,UACAA,KAAA,kBACAA,KAAA,mBACAD,OAAA,QACAC,KAAA,2BACAA,KAAA,kBACAA,KAAA,qBACAoH,EAAArH,OAAA,UACAC,KAAA,qBACAA,KAAA,iBACAA,KAAA,kBACAA,KAAA,6BACAA,KAAA,gCACAA,KAAA,wBACAA,KAAA,WACAA,KAAA,UACAA,KAAA,kBACAA,KAAA,mBACAD,OAAA,QACAC,KAAA,2BACAA,KAAA,kBACAA,KAAA,wBCzjCgV,ICS5U,G,oBAAY,eACd,EACA,EACA,GACA,EACA,KACA,WACA,OAIa,I,QCJA,GACfqH,WAAA,CACAC,UACAC,WAEAzP,OACA,OAEAA,KAAA,CACAiJ,MAAA,GACAC,MAAA,IAKAtE,MAAA,8DACAC,OAAA,8DACAC,UAAA,2CAIAM,QAAA,CAEAT,OAAA+K,GAGA,KAAAC,aAAAD,IAIAC,aAAAD,GACA,MAAAzG,EAAA,GACAC,EAAA,GACA0G,EAAA,GACAC,QAAAnF,IAAA,QAAAxB,EAAA4G,kBASA,QAAA9I,KAAA0I,EACA,QAAAK,KAAA/I,EAAAxD,EAAAwM,UAEA,GAAAJ,EAAAnK,QAAAsK,EAAAE,MAAAC,YACAN,EAAA9O,KAAAiP,EAAAE,MAAAC,UACAjH,EAAAnI,KAAA,CACA4I,GAAAqG,EAAAE,MAAAC,SACAvE,MAAAoE,EAAAE,MAAApL,OAAA,GACAkC,WAAAgJ,EAAAE,MAAAlJ,eAGA,GAAA6I,EAAAnK,QAAAsK,EAAAI,IAAAD,YACAN,EAAA9O,KAAAiP,EAAAI,IAAAD,UACAjH,EAAAnI,KAAA,CACA4I,GAAAqG,EAAAI,IAAAD,SACAvE,MAAAoE,EAAAI,IAAAtL,OAAA,GACAkC,WAAAgJ,EAAAI,IAAApJ,cAGAmC,EAAApI,KAAA,CACA8I,OAAAmG,EAAAK,aAAAH,MACApG,OAAAkG,EAAAK,aAAAD,IACApH,KAAAgH,EAAAK,aAAArH,KACAhC,WAAAgJ,EAAAK,aAAArJ,aAQA,KAAA/G,KAAA,CAAAiJ,QAAAC,YC1F+U,ICQ3U,G,UAAY,eACd,EACA,EACA,GACA,EACA,KACA,WACA,OAIa,I,QCffmH,aAAIC,IAAIC,QAER,MAAMC,EAAS,CACb,CACEC,KAAM,IACNrO,KAAM,OACNoC,UAAWkM,EACXC,KAAM,CACJC,KAAM,8CAaNC,EAAS,IAAIN,OAAU,CAC3BC,WAGaK,Q,YC1BfR,aAAIC,IAAIQ,QAEO,UAAIA,OAAKC,MAAM,CAC5B1F,MAAO,GAEP2F,UAAW,GAEXC,QAAS,GAETlQ,QAAS,KCHXsP,aAAIC,IAAIY,KACRb,aAAIc,OAAOC,eAAgB,EAE3B,IAAIf,aAAI,CACNQ,SACAQ,QACAxN,OAAQyN,GAAKA,EAAEC,KACdC,OAAO,S,6DChBV,W,2DCAA,W,kCCAA,W","file":"js/app.061bf459.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./d3graph.vue?vue&type=style&index=0&id=ab638932&prod&lang=scss\"","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&id=01a9d41c&prod&lang=scss\"","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{attrs:{\"id\":\"app\"}},[_vm._m(0),_c('router-view')],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{attrs:{\"id\":\"nav\"}},[_c('div',{attrs:{\"id\":\"navtop\"}},[_c('span',{staticStyle:{\"font-size\":\"28px\",\"color\":\"red\",\"font-weight\":\"bold\",\"margin-left\":\"35%\"}},[_vm._v(\"Human-Robot Interaction (HRI) Data Model \")])])])\n}]\n\nexport { render, staticRenderFns }","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&setup=true&lang=js\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&setup=true&lang=js\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=01a9d41c\"\nimport script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=01a9d41c&prod&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"gContainer\"},[_c('gSearch',{on:{\"getData\":_vm.update}}),_c('d3graph',{attrs:{\"data\":_vm.data,\"names\":_vm.names,\"labels\":_vm.labels,\"linkTypes\":_vm.linkTypes}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div')\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'gSearch',\r\n  data () {\r\n    return {\r\n      input: '',\r\n      mode: '1',\r\n      // 后台请求到的json数据\r\n      data: require('../data/records.json'),\r\n      results: []\r\n    }\r\n  },\r\n  mounted () {\r\n    this.$emit('getData', this.data)\r\n  },\r\n  methods: {\r\n    createFilter (queryString) {\r\n      return (res) => {\r\n        return (res.value.toLowerCase().indexOf(queryString.toLowerCase()) !== -1)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang='scss' scoped>\r\n.el-select {\r\n  width: 120px;\r\n  // background-color: #fff;\r\n}\r\n.input-with-select .el-input-group__prepend {\r\n  background-color: #6ecbf3;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./gSearch.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./gSearch.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./gSearch.vue?vue&type=template&id=98e99b2e&scoped=true\"\nimport script from \"./gSearch.vue?vue&type=script&lang=js\"\nexport * from \"./gSearch.vue?vue&type=script&lang=js\"\nimport style0 from \"./gSearch.vue?vue&type=style&index=0&id=98e99b2e&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"98e99b2e\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{attrs:{\"id\":\"mode\"}},[_c('div',{staticClass:\"gState\",staticStyle:{\"margin-bottom\":\"20px\"}}),_c('h3',{staticStyle:{\"color\":\"#1e3547\"}},[_vm._v(\"Search\")]),_c('el-input',{staticStyle:{\"width\":\"70%\",\"margin-bottom\":\"20px\"},attrs:{\"clearable\":\"\",\"placeholder\":\"请输入节点名称\"},on:{\"input\":_vm.searchKeyWords},model:{value:(_vm.keywords),callback:function ($$v) {_vm.keywords=$$v},expression:\"keywords\"}}),_c('div',{attrs:{\"id\":\"indicator1\"}},_vm._l((_vm.names),function(name,index){return _c('div',{key:index},[_c('span',{staticStyle:{\"cursor\":\"pointer\"},style:({ backgroundColor: _vm.states[index] === 'on' ? _vm.colors[index] : '#aaa' }),attrs:{\"data-state\":_vm.states[index],\"data-index\":index},on:{\"click\":_vm.hideNodeOfType}}),_vm._v(\" \"+_vm._s(name)+\" \")])}),0)],1),_c('svg',{attrs:{\"id\":\"svg\",\"width\":\"100%\",\"height\":\"100%\"}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.selectNodeData.name !== undefined),expression:\"selectNodeData.name !== undefined\"}],attrs:{\"id\":\"info\"}},[_c('el-card',{staticClass:\"node-card\",staticStyle:{\"font-weight\":\"normal\",\"font-size\":\"10px\"},style:({ backgroundColor: _vm.selectNodeData.color})},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(_vm._s(_vm.selectNodeData.name))]),_c('el-button',{staticStyle:{\"float\":\"right\",\"padding\":\"3px 0\",\"color\":\"#409EFB\",\"font-size\":\"15px\"},attrs:{\"type\":\"text\"},on:{\"click\":_vm.btnEdit}},[_vm._v(\"编辑\")])],1),_vm._l((_vm.selectNodeData.properties),function(item,key){return _c('div',{key:item},[_c('span',{staticStyle:{\"margin-right\":\"8px\"}},[_vm._v(_vm._s((_vm.nodeObjMap[key] ? _vm.nodeObjMap[key] : key) + ':'))]),_c('span',{staticStyle:{\"text-align\":\"left\"}},[_c('b',[_vm._v(_vm._s(item))])])])})],2)],1),_c('el-dialog',{attrs:{\"visible\":_vm.dialogFormVisible},on:{\"update:visible\":function($event){_vm.dialogFormVisible=$event}}},[_c('el-form',{staticStyle:{\"width\":\"500px\",\"margin-left\":\"50px\"},attrs:{\"model\":_vm.temp,\"label-position\":\"right\",\"label-width\":\"99px\"}},_vm._l((_vm.temp),function(value,key){return _c('el-form-item',{key:key,attrs:{\"label\":_vm.nodeObjMap[key] ? _vm.nodeObjMap[key] : key}},[_c('el-input',{attrs:{\"readonly\":!_vm.isEdit},model:{value:(_vm.temp[key]),callback:function ($$v) {_vm.$set(_vm.temp, key, $$v)},expression:\"temp[key]\"}})],1)}),1),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":_vm.cancelEdit}},[_vm._v(\" 取消 \")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.doEdit}},[_vm._v(\" 确定 \")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","let _d3 = null\r\n// 为d3注册该右键菜单插件\r\nfunction install (d3) {\r\n  _d3 = d3\r\n  _d3.contextMenu = contextMenu\r\n}\r\nconst contextMenu = function (menu, openCallback) {\r\n  // create the div element that will hold the context menu\r\n  _d3.selectAll('.d3-context-menu').data([1])\r\n    .enter()\r\n    .append('div')\r\n    .attr('class', 'd3-context-menu')\r\n\r\n  // close menu\r\n  _d3.select('body').on('click.d3-context-menu', function () {\r\n    _d3.select('.d3-context-menu').style('display', 'none')\r\n  })\r\n\r\n  // this gets executed when a contextmenu event occurs\r\n  return function (event, data) {\r\n    // console.log(event)\r\n    // 指向右键触发的节点\r\n    var elm = this\r\n\r\n    _d3.selectAll('.d3-context-menu').html('')\r\n    var list = _d3.selectAll('.d3-context-menu').append('ul')\r\n    list.selectAll('li').data(menu).enter()\r\n      .append('li')\r\n      .html(function (d) {\r\n        return d.title\r\n      })\r\n      .on('click', function (e, d) {\r\n        // // console.log(d)\r\n        d.action(elm, data)\r\n        _d3.select('.d3-context-menu').style('display', 'none')\r\n      })\r\n\r\n    // the openCallback allows an action to fire before the menu is displayed\r\n    // an example usage would be closing a tooltip\r\n    if (openCallback) openCallback(data)\r\n\r\n    // display context menu\r\n    _d3.select('.d3-context-menu')\r\n      .style('left', (event.pageX - 2) + 'px')\r\n      .style('top', (event.pageY - 2) + 'px')\r\n      .style('display', 'block')\r\n\r\n    event.preventDefault()\r\n  }\r\n}\r\n\r\nexport default install\r\n","<template>\r\n  <div>\r\n    <!-- 绘制模式选择 -->\r\n    <div id=\"mode\" >\r\n      <div class=\"gState\" style=\"margin-bottom: 20px;\">\r\n<!--        <span-->\r\n<!--          @click=\"changeTextState(0)\"-->\r\n<!--          :class=\"{ active: isShowText }\"-->\r\n<!--          style=\"border-top-right-radius:0;border-bottom-right-radius:0;\"-->\r\n<!--        >显示关系</span>-->\r\n<!--        &lt;!&ndash; <span-->\r\n<!--          @click=\"changeNodeState(1)\"-->\r\n<!--          :class=\"{ active: nodeState === 1 }\"-->\r\n<!--          style=\"border-top-left-radius:0;border-bottom-left-radius:0;position:relative;left:-5px;\"-->\r\n<!--        >关系(度)</span> &ndash;&gt;-->\r\n<!--        <span-->\r\n<!--          @click=\"changeTextState(2)\"-->\r\n<!--          :class=\"{ active: textState === 2 }\"-->\r\n<!--          style=\"border-top-left-radius:0;border-bottom-left-radius:0;position:relative;left:-5px;\"-->\r\n<!--        >隐藏关系</span>-->\r\n      </div>\r\n      <h3 style=\"color:#1e3547\">Search</h3>\r\n      <el-input @input=\"searchKeyWords\" v-model=\"keywords\" clearable placeholder=\"请输入节点名称\" style=\"width: 70%;margin-bottom: 20px\" />\r\n\r\n        <div id=\"indicator1\" >\r\n        <!-- 利用item 遍历一个数组 利用index 遍历另外一个数组 -->\r\n        <div v-for=\"(name, index) in names\" :key=\"index\">\r\n        <span\r\n          @click=\"hideNodeOfType\"\r\n          :data-state=\"states[index]\"\r\n          :data-index=\"index\"\r\n          style=\"cursor: pointer;\"\r\n          :style=\"{ backgroundColor: states[index] === 'on' ? colors[index] : '#aaa' }\"\r\n        ></span>\r\n          {{ name }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <svg\r\n      id=\"svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n\r\n    ></svg>\r\n    <!-- 绘制图例 -->\r\n<!--    <div id=\"indicator2\">-->\r\n<!--      &lt;!&ndash; 利用item 遍历一个数组 利用index 遍历另外一个数组 &ndash;&gt;-->\r\n<!--      <div v-for=\"(name, index) in names.slice(4)\" :key=\"index\">-->\r\n<!--        <span-->\r\n<!--          @click=\"hideNodeOfType\"-->\r\n<!--          :data-state=\"states[index+4]\"-->\r\n<!--          :data-index=\"index+4\"-->\r\n<!--          style=\"cursor: pointer;\"-->\r\n<!--          :style=\"{ backgroundColor: states[index+4] === 'on' ? colors[index+4] : '#aaa' }\"-->\r\n<!--        ></span>-->\r\n<!--        {{ name }}-->\r\n<!--      </div>-->\r\n<!--    </div>-->\r\n    <!-- 绘制右边显示结果 -->\r\n    <div id=\"info\" v-show=\"selectNodeData.name !== undefined\">\r\n      <!-- <h4 :style=\"{ color: selectNodeData.color }\">{{ selectNodeData.name }}</h4>\r\n      <p v-for=\"(item, key) in selectNodeData.properties\" :key=\"item\">\r\n        <span>{{ key }}</span>\r\n        {{ item }}\r\n      </p> -->\r\n      <el-card\r\n        :style=\"{ backgroundColor: selectNodeData.color}\"\r\n        class=\"node-card\"\r\n       style=\"font-weight: normal;font-size: 10px\">\r\n        <div slot=\"header\" class=\"clearfix\">\r\n          <span>{{ selectNodeData.name }}</span>\r\n          <el-button\r\n            @click=\"btnEdit\"\r\n            style=\"float: right; padding: 3px 0;color: #409EFB;font-size: 15px;\"\r\n            type=\"text\"\r\n          >编辑</el-button>\r\n        </div>\r\n        <div\r\n          v-for=\"(item, key) in selectNodeData.properties\" :key=\"item\"\r\n        >\r\n          <span style=\"margin-right: 8px;\">{{ (nodeObjMap[key] ? nodeObjMap[key] : key) + ':' }}</span>\r\n          <span style=\"text-align:left;\"><b>{{ item }}</b></span>\r\n        </div>\r\n      </el-card>\r\n    </div>\r\n    <!-- 编辑框 -->\r\n    <el-dialog :visible.sync=\"dialogFormVisible\">\r\n      <el-form\r\n        :model=\"temp\"\r\n        label-position=\"right\"\r\n        label-width=\"99px\"\r\n        style=\"width: 500px; margin-left:50px;\"\r\n      >\r\n        <el-form-item\r\n          v-for=\"(value, key) in temp\"\r\n          :key=\"key\"\r\n          :label=\"nodeObjMap[key] ? nodeObjMap[key] : key\"\r\n        >\r\n          <el-input\r\n            v-model=\"temp[key]\"\r\n            :readonly=\"!isEdit\"\r\n          />\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"cancelEdit\">\r\n          取消\r\n        </el-button>\r\n        <el-button type=\"primary\" @click=\"doEdit\">\r\n          确定\r\n        </el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from 'd3'\r\nimport install from '@/plugins/d3-context-menu'\r\ninstall(d3) // 为d3注册右键菜单插件\r\nexport default {\r\n  name: 'd3graph',\r\n  props: {\r\n    data: {\r\n      type: Object,\r\n      default: function () {\r\n        return {\r\n          nodes: [],\r\n          links: []\r\n        }\r\n      }\r\n    },\r\n    /* eslint-disable */\r\n    // 自定义图例（数组保证一一对应）\r\n    // names\t\t图例名称变量制作图标\r\n    // labels\t\t节点的标签名称（与records.json中保证相同）\r\n    names: {\r\n      type: Array\r\n    },\r\n    labels: Array,\r\n    linkTypes: Array\r\n  },\r\n  data () {\r\n    return {\r\n      svgDom: null, // svg的DOM元素 => d3.select('#svg1')\r\n      keywords: '',\r\n      nodeState: 0,\r\n      // 文本状态，表示是否显示文本信息（0：显示/1：不显示）\r\n      textState: 0,\r\n      // d3render()最终展示到页面上的数据（节点隐藏功能）\r\n      nodes: [],\r\n      links: [],\r\n      /* eslint-disable */\r\n      // 自定义图例及颜色（数组保证一一对应）\r\n      // colors\t\t图例颜色（9个颜色）\r\n      // states   图例状态（on：显示 / off：不显示）\r\n      colors: [\r\n        '#BD372F', '#2E4451', '#629FA8',\r\n        '#D28264','#172642', '#45535C',\r\n        '#231F20', '#938882','#33342E',\r\n        '#424727','#92AE9D','#40414C',\r\n        '#BF6962','#999578','#3f1925',\r\n        ],\r\n      states: ['on','off','off','off','off','off','off','off','off','off','off','off','off','off','off'],\r\n      selectNodeData: {}, // 选中节点的详细信息展示\r\n      isNodeClicked: false, // 是否点击（选中）节点\r\n      // 用于位置、大小矫正（暂不使用）\r\n      // svgTranslate: [240, 130],\r\n      // svgScale: 0.5,\r\n      // 右击事件的菜单栏\r\n      menu: [\r\n        {\r\n          title: '隐藏节点',\r\n          action: (elm, d) => {\r\n            // console.log(d)\r\n            // 遍历删除节点\r\n            this.nodes = this.nodes.filter(node => {\r\n              if (node.id === d.id) return false\r\n              else return true\r\n            })\r\n            // 遍历删除关系\r\n            this.links = this.links.filter(link => {\r\n              if (link.source.id === d.id || link.target.id === d.id) return false\r\n              else return true\r\n            })\r\n            this.d3render() // 重新渲染图\r\n            this.stateInit()\r\n          },\r\n          disabled: false // optional, defaults to false\r\n        },\r\n        {\r\n          title: '显示节点关联图',\r\n          action: (elm, d) => {\r\n            // console.log(d)\r\n            // 遍历保留对应节点\r\n            this.nodes = this.data.nodes.filter(node => {\r\n              if (node.id === d.id) return true\r\n              else {\r\n                for (var i = 0; i < this.data.links.length; i++) {\r\n                  // 如果links的起点等于name，并且终点等于正在处理的则显示\r\n                  if (this.data.links[i].source.id === node.id && this.data.links[i].target.id === d.id) {\r\n                    return true\r\n                  }\r\n                  if (this.data.links[i].target.id === node.id && this.data.links[i].source.id === d.id) {\r\n                    return true\r\n                  }\r\n                }\r\n                return false\r\n              }\r\n            })\r\n            // 遍历保留节点的关联关系\r\n            this.links = this.data.links.filter(link => {\r\n              if (link.source.id === d.id || link.target.id === d.id) return true\r\n              else return false\r\n            })\r\n            this.d3render() // 重新渲染图\r\n            this.stateInit()\r\n          }\r\n        },\r\n        {\r\n          title: '显示所有查询节点',\r\n          action: (elm, d) => {\r\n            this.nodes = this.data.nodes\r\n            // 遍历保留节点的关联关系\r\n            this.links = this.data.links\r\n            this.d3render() // 重新渲染图\r\n            this.stateInit()\r\n          }\r\n        }\r\n      ],\r\n      temp: {}, // 临时存储编辑时的节点信息\r\n      dialogFormVisible: false,\r\n      isEdit: true,\r\n      // 节点属性对应的标签名称\r\n      nodeObjMap: {\r\n        'address': '注册地址',\r\n        'captial': '注册资本',\r\n        'credit_code': '信用代码',\r\n        'name': '节点名称',\r\n        'setup_time': '注册日期'\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    isShowNode: function () {\r\n      // `this` 指向 vm 实例\r\n      return this.nodeState === 0\r\n    },\r\n    isShowText: function () {\r\n      // `this` 指向 vm 实例\r\n      return this.textState === 0\r\n    },\r\n    gDensity () {\r\n      return this.nodes.length <= 1 ? 0 : (this.links.length / (this.nodes.length * (this.nodes.length - 1))).toFixed(2)\r\n    },\r\n    gDegree () {\r\n      return (this.links.length / this.nodes.length).toFixed(2)\r\n    },\r\n    // 企业实体的平均度数\r\n    gMainDegree () {\r\n      // 遍历节点\r\n      // this.nodes.forEach(node => {\r\n      //\r\n      // })\r\n      // // 遍历关系\r\n      // this.links.forEach(link => {\r\n      //\r\n      // })\r\n    },\r\n    // 稀疏度\r\n    gSparsity () {\r\n      return (this.links.length / (this.nodes.length * Math.log(this.nodes.length))).toFixed(2)\r\n    }\r\n  },\r\n  watch: {\r\n    // 当请求到新的数据时，重新渲染\r\n    data (newData, oldData) {\r\n      // console.log(newData, oldData)\r\n      // 移除svg和元素注册事件，防止内存泄漏\r\n      this.svgDom.on('.', null)\r\n      this.svgDom.selectAll('*').on('.', null)\r\n      this.d3init()\r\n    }\r\n  },\r\n  created () {\r\n   // console.log(this.states)\r\n    // this.states = Array(this.names.length).fill('on')\r\n  },\r\n  mounted () {\r\n    this.d3init()\r\n  },\r\n  beforeDestroy () {\r\n    // 移除svg和元素注册事件，防止内存泄漏\r\n    this.svgDom.on('.', null)\r\n    this.svgDom.selectAll('*').on('.', null)\r\n  },\r\n  methods: {\r\n    // 编辑当前选中节点\r\n    btnEdit () {\r\n      this.temp = Object.assign({}, this.selectNodeData.properties) // copy obj\r\n      this.dialogFormVisible = true\r\n      // console.log(this.selectNodeData)\r\n    },\r\n    doEdit () {\r\n      // // console.log(this.data)\r\n      let i = 0\r\n      // 更新props的data 和 selectNodeData\r\n      this.selectNodeData.name = this.temp.name\r\n      this.selectNodeData.properties = this.temp\r\n      for (let node of this.data.nodes) {\r\n        // // console.log(node.id === this.selectNodeData.id)\r\n        // // console.log(node.id)\r\n        // // console.log(this.selectNodeData.id)\r\n        if (node.id == this.selectNodeData.id) {\r\n          // this.$set(this.data.nodes, i, this.selectNodeData)\r\n          // this.$set(this.nodes, i, this.selectNodeData)\r\n          this.data.nodes[i].properties = this.temp\r\n          this.nodes[i].properties = this.temp\r\n          // break\r\n        }\r\n        i++\r\n      }\r\n      this.dialogFormVisible = false\r\n      this.d3init()\r\n      this.$message({\r\n        message: '更新成功',\r\n        type: 'success'\r\n      })\r\n    },\r\n    cancelEdit () {\r\n      this.dialogFormVisible = false\r\n    },\r\n    // 隐藏文字\r\n    changeTextState (state) {\r\n      // state发生变化时才进行更新、处理\r\n      if (this.textState !== state) {\r\n        this.textState = state\r\n        // const text = d3.selectAll('.texts text')\r\n        const text = d3.selectAll('.linkTexts text')\r\n        // console.log('text=='+text.text)\r\n       // // console.log(text)\r\n        // 根据新的节点状态，在节点上展示不同的文本信息\r\n        if (this.textState === 2) {\r\n          text.style('display', 'none')\r\n          // 暂不作校准\r\n          // // transform属性数值化\r\n          // // 原：translate(40, 8) scale(1)\r\n          // // 现：[40, 8, 1]\r\n          // let transform = d3.select('#svg1 g').attr('transform')\r\n          // transform = transform\r\n          //   ? transform.match(/\\d.?/g).map(item => parseInt(item))\r\n          //   : [0, 0, 1]\r\n          // // 校准\r\n          // transform[0] = transform[0] + this.svgTranslate[0]\r\n          // transform[1] = transform[1] + this.svgTranslate[1]\r\n          // transform[2] = transform[2] * this.svgScale\r\n\r\n          // // console.log(transform)\r\n          // // 隐藏节点后，svg自动缩放\r\n          // d3.select('#svg1 g').attr('transform', 'translate(' + transform[0] + ', ' + transform[1] + ') scale(' + transform[2] + ')')\r\n        } else {\r\n          text.style('display', 'block')\r\n          // 暂不作校准\r\n          // 显示节点后，svg自动还原\r\n          // d3.select('#svg1 g').attr('transform', '')\r\n        }\r\n      }\r\n    },\r\n    // 隐藏该类型的所有节点（图例）\r\n    hideNodeOfType (event) {\r\n      // console.log(this.states)\r\n      if (this.nodes.length === this.data.nodes.length\r\n        || this.states.some((state) => state === 'off')) {\r\n        // console.log(event.target.dataset)\r\n        const index = event.target.dataset.index\r\n        const state = event.target.dataset.state\r\n        // const nodeTypes = ['Enterprise', 'Type', 'Region', 'Country']\r\n        // const linkTypes = ['', 'type', 'locate', 'export']\r\n        // 图例的状态切换（对应类型的节点隐藏）\r\n        if (state === 'on') {\r\n          // 隐藏该类型的所有节点及关联关系\r\n          // this.states[index] = 'off'\r\n          this.$set(this.states, index, 'off')\r\n        } else {\r\n          // this.states[index] = 'on'\r\n          this.$set(this.states, index, 'on')\r\n        }\r\n        /**************************************\r\n         * 状态更新后，同时对数据更新\r\n         */\r\n        const indexs = this.states.map(s => {\r\n          if (s === 'on') {\r\n            return '1'\r\n          } else {\r\n            return '0'\r\n          }\r\n        })\r\n        // 遍历删除节点\r\n        this.nodes = this.data.nodes.filter(node => {\r\n          for (let i = 0; i < indexs.length; i++) {\r\n            if (node.label === this.labels[i] && indexs[i] === '0') return false\r\n          }\r\n          return true\r\n        })\r\n        // 遍历删除关系\r\n        this.links = this.data.links.filter(link => {\r\n          for (let i = 0; i < indexs.length; i++) {\r\n            if (i === 0 && indexs[i] === '0') return false\r\n            else if (link.type === this.linkTypes[i] && indexs[i] === '0') return false\r\n          }\r\n          return true\r\n        })\r\n        // 调试时使用\r\n        // console.log(indexs)\r\n        //// console.log(this.data.nodes.length, this.data.links.length)\r\n         //// console.log(this.nodes.length)\r\n         //// console.log(this.links.length)\r\n        // 重新渲染\r\n        this.d3render()\r\n      } else {\r\n        this.$message.error('展示全部节点时才能隐藏图例')\r\n      }\r\n    },\r\n\r\n    /*eslint-disable*/\r\n    // 搜索包含关键字的节点\r\n    searchKeyWords (value) {\r\n      // 如果Input值是空的显示所有的圆和线(没有进行筛选)\r\n      if (this.keywords === '') {\r\n        this.clearGraphStyle()\r\n      }\r\n      // 否则判断判断三个元素是否等于name值，等于则显示该值\r\n      else {\r\n        var name = this.keywords\r\n        // 搜索所有的节点\r\n        this.svgDom.select('.nodes').selectAll('circle').attr('class', d => {\r\n          // 输入节点id的小写等于name则显示，否则隐藏\r\n          if (d.properties.name.indexOf(name) >= 0) {\r\n              return 'fixed'\r\n          } else {\r\n            // 优化：与该搜索相关联的节点均显示\r\n            // links链接的起始节点进行判断,如果其id等于name则显示这类节点\r\n            // 注意: graph=data\r\n            for (var i = 0; i < this.links.length; i++) {\r\n              // 如果links的起点等于name，并且终点等于正在处理的则显示\r\n              if ((this.links[i]['source'].properties.name.indexOf(name) >= 0) &&\r\n                (this.links[i]['target'].id == d.id)) {\r\n                  return 'active'\r\n              }\r\n              // 如果links的终点等于name，并且起点等于正在处理的则显示\r\n              if ((this.links[i]['target'].properties.name.indexOf(name) >= 0) &&\r\n                (this.links[i]['source'].id == d.id)) {\r\n                  return 'active'\r\n              }\r\n            }\r\n            return 'inactive' // 隐藏\r\n          }\r\n        })\r\n        // 搜索texts\r\n        this.svgDom.select('.texts').selectAll('text').attr('class', d => {\r\n          if (d.properties.name.indexOf(name) >= 0) {\r\n              return ''\r\n          } else {\r\n            // 优化：与该搜索相关联的节点均显示\r\n            // links链接的起始节点进行判断,如果其id等于name则显示这类节点\r\n            for (var i = 0; i < this.links.length; i++) {\r\n            // 如果links的起点等于name，并且终点等于正在处理的则显示\r\n              if ((this.links[i]['source'].properties.name.indexOf(name) >= 0) &&\r\n                (this.links[i]['target'].id == d.id)) {\r\n                  return ''\r\n              }\r\n              //如果links的终点等于name，并且起点等于正在处理的则显示\r\n              if ((this.links[i]['target'].properties.name.indexOf(name) >= 0) &&\r\n                (this.links[i]['source'].id == d.id)) {\r\n                return ''\r\n              }\r\n            }\r\n            return 'inactive'\r\n          }\r\n        })\r\n        // 搜索links\r\n        // 显示相的邻边 注意 ||\r\n        this.svgDom.select(\".links\").selectAll('line').attr('class', d => {\r\n          if ((d.source.properties.name.indexOf(name) >= 0) ||\r\n            (d.target.properties.name.indexOf(name) >= 0)\r\n            ) {\r\n              return ''\r\n            } else {\r\n              return 'inactive' //隐藏\r\n            }\r\n        })\r\n        // 搜索linkTexts\r\n        this.svgDom.select(\".linkTexts\").selectAll('text').attr('class', d => {\r\n          if ((d.source.properties.name.indexOf(name) >= 0) ||\r\n            (d.target.properties.name.indexOf(name) >= 0)\r\n            ) {\r\n              return ''\r\n            } else {\r\n              return 'inactive' //隐藏\r\n            }\r\n        })\r\n      }\r\n    },\r\n    // d3初始化，包括数据解析、数据渲染\r\n    d3init () {\r\n      this.links = this.data.links\r\n      this.nodes = this.data.nodes\r\n      this.svgDom = d3.select('#svg')  // 获取svg的DOM元素\r\n      // this.d3jsonParser(this.graph)\r\n\r\n      // 数据状态初始化\r\n      this.stateInit()\r\n      this.d3render()\r\n    },\r\n    // 数据状态初始化\r\n    stateInit () {\r\n      this.nodeState = 0\r\n      this.textState = 0\r\n      // // console.log(this.names)\r\n\r\n      const indexs = this.states.map(s => {\r\n          if (s === 'on') {\r\n            return '1'\r\n          } else {\r\n            return '0'\r\n          }\r\n        })\r\n        // 遍历删除节点\r\n        this.nodes = this.data.nodes.filter(node => {\r\n          for (let i = 0; i < indexs.length; i++) {\r\n            if (node.label === this.labels[i] && indexs[i] === '0') return false\r\n          }\r\n          return true\r\n        })\r\n        // 遍历删除关系\r\n        this.links = this.data.links.filter(link => {\r\n          for (let i = 0; i < indexs.length; i++) {\r\n            if (i === 0 && indexs[i] === '0') return false\r\n            else if (link.type === this.linkTypes[i] && indexs[i] === '0') return false\r\n          }\r\n          return true\r\n        })\r\n        this.d3render()\r\n    },\r\n    d3render () {\r\n      var _this = this // 临时获取Vue实例，避免与d3的this指针冲突\r\n\r\n      // 渲染前清空svg内的元素\r\n      _this.svgDom.selectAll('*').remove()\r\n      // svg.selectAll('g').remove()\r\n\r\n      var svg = _this.svgDom\r\n        .on('click', () => {\r\n          // // console.log(this.isNodeClicked)\r\n          this.isNodeClicked = false\r\n          // 移除所有样式\r\n          this.clearGraphStyle()\r\n          // 如果此时有搜索关键字，则鼠标离开时保留原搜索选中的节点\r\n          if(this.keywords !== '') {\r\n            this.searchKeyWords()\r\n          }\r\n        })\r\n        // 给画布绑定zoom事件（缩放、平移）\r\n        .call(d3.zoom().on('zoom', event => {\r\n          // // console.log(event)\r\n          var scale = event.transform.k,\r\n              translate = [event.transform.x, event.transform.y]\r\n\r\n          // if (this.svgTranslate) {\r\n          //     translate[0] += this.svgTranslate[0]\r\n          //     translate[1] += this.svgTranslate[1]\r\n          // }\r\n\r\n          // if (this.svgScale) {\r\n          //     scale *= this.svgScale\r\n          // }\r\n\r\n          svg.attr('transform', 'translate(' + translate[0] + ', ' + translate[1] + ') scale(' + scale + ')');\r\n        }))\r\n        .append('g')\r\n        .attr('width', '100%')\r\n        .attr('height', '100%')\r\n\r\n      this.addMarkers()\r\n      // // console.log(svg)\r\n      // 动态变化时，不再固定宽高\r\n\t\t\t// var width = svg.attr(\"width\"),\r\n      //     height = svg.attr(\"height\")\r\n\r\n      // 解析json和数据处理\r\n      // 现在解析json直接在d3jsonParser()中更新nodes和links\r\n      // const data = this.d3jsonParser(this.graph)\r\n      // this.links = data.links.map(d => Object.create(d))\r\n      // this.nodes = data.nodes.map(d => Object.create(d))\r\n\r\n      // 定义碰撞检测模型\r\n      var forceCollide = d3.forceCollide()\r\n        .radius(d => { return 16 * 3 })\r\n        .iterations(0.15)\r\n        .strength(0.75)\r\n\r\n      // 利用d3.forceSimulation()定义关系图 包括设置边link、排斥电荷charge、关系图中心点\r\n      var simulation = d3.forceSimulation(this.nodes)\r\n        .force(\"link\", d3.forceLink().id(d => d.id))\r\n        .force(\"charge\", d3.forceManyBody().strength(-100))\r\n        // .force(\"center\", d3.forceCenter(width / 2, height / 2)\r\n        .force(\"center\", d3.forceCenter(svg.node().parentElement.clientWidth / 2, svg.node().parentElement.clientHeight / 2))\r\n        .force(\"collision\", forceCollide)\r\n\r\n      // D3映射数据至HTML中\r\n      // g用于绘制所有边,selectALL选中所有的line,并绑定数据data(graph.links),enter().append(\"line\")添加元素\r\n      // 数据驱动文档,设置边的粗细\r\n      var link = svg.append(\"g\")\r\n        .attr(\"class\", \"links\")\r\n        .selectAll(\"line\")\r\n        .data(this.links).enter()\r\n        .append(\"line\")\r\n        .attr(\"stroke-width\", function(d) {\r\n          // 每次访问links的一项数据\r\n          return 2 //所有线宽度均为2\r\n        })\r\n        .join(\"path\")\r\n        .attr(\"marker-end\", \"url(#posMarker)\")\r\n\r\n      var linksName = svg.append(\"g\")\r\n        .attr(\"class\", \"linkTexts\")\r\n        .selectAll(\"text\")\r\n        .data(this.links)\r\n        .join(\"text\")\r\n        .style('text-anchor','middle')\r\n        .style('fill', '#fff')\r\n        .style('font-size', '12px')\r\n        // .style('font-weight', 'bold')\r\n        .text(d => d.properties.name)\r\n\r\n      // linksName\r\n      //   .append('textPath')\r\n      //   .attr('xlink:href', d => '#')\r\n      //   .attr('startOffset', '50%')\r\n\r\n      // 添加所有的点\r\n      // selectAll(\"circle\")选中所有的圆并绑定数据,圆的直径为d.size\r\n      // 再定义圆的填充色,同样数据驱动样式,圆没有描边,圆的名字为d.id\r\n      // call()函数：拖动函数,当拖动开始绑定dragstarted函数，拖动进行和拖动结束也绑定函数\r\n      var node = svg.append(\"g\")\r\n        .attr(\"class\", \"nodes\")\r\n        .selectAll(\"circle\")\r\n        .data(this.nodes).enter()\r\n        .append(\"circle\").attr(\"r\", function(d) {\r\n          // 每次访问nodes的一项数据\r\n          // // console.log(d)\r\n          let size = 16\r\n          switch(d.label){\r\n            case _this.labels[0]: break;\r\n            case _this.labels[1]: size = 14; break;\r\n            case _this.labels[2]: size = 13; break;\r\n            default: size = 13; break;\r\n          }\r\n          return size * 2\r\n        })\r\n        .attr(\"fill\", d => {\r\n          for (let i = 0;i < this.labels.length;i++) {\r\n            if (d.label === this.labels[i]) return this.colors[i]\r\n          }\r\n        })\r\n        .attr(\"stroke\", \"none\")\r\n        .attr(\"name\", d => d.properties.name)\r\n        .attr(\"id\", d => d.id)\r\n        .call(this.drag(simulation))\r\n        .on(\"click\", nodeClick)\r\n        .on('mouseenter', function (event) {\r\n          // console.dir(this)\r\n          const node = d3.select(this)\r\n          // node.attr(\"class\", \"fixed\")\r\n          // node.classed(\"fixed\", true)\r\n          // // console.log(node)\r\n          //获取被选中元素的名字\r\n          let name = node.attr(\"name\")\r\n          let id = node.attr(\"id\")\r\n          let color = node.attr('fill')\r\n          // // console.log(name, id, color)\r\n          //设置#info h4样式的颜色为该节点的颜色，文本为该节点name\r\n          _this.$set(_this.selectNodeData, 'id', id)\r\n          _this.$set(_this.selectNodeData, 'name', name)\r\n          _this.$set(_this.selectNodeData, 'color', color)\r\n\r\n          //遍历查找id对应的属性\r\n          for (let item of _this.nodes) {\r\n            if (item.id == id) {\r\n              // for(var key in item.properties)\r\n              _this.$set(_this.selectNodeData, 'properties', item.properties)\r\n            }\r\n          }\r\n          // 遍历节点，并调整图的样式\r\n          _this.changeGraphStyle(name)\r\n        })\r\n        .on('mouseleave', event => {\r\n          // console.log(this.isNodeClicked)\r\n          if (!this.isNodeClicked) {\r\n            this.clearGraphStyle()\r\n            // 如果此时有搜索关键字，则鼠标离开时保留原搜索选中的节点\r\n            if(this.keywords !== '') {\r\n              this.searchKeyWords()\r\n            }\r\n          }\r\n        })\r\n        .on('contextmenu', d3.contextMenu(this.menu))\r\n        // .on('contextmenu', function (d, i) {\r\n        //   // 阻止默认右键菜单的弹出\r\n        //   d3.event.preventDefault()\r\n\r\n        // })\r\n        // .call(d3.drag()\r\n        //   .on(\"start\", dragstarted)\r\n        //   .on(\"drag\", dragged)\r\n        //   .on(\"end\", dragended)\r\n        // )\r\n\r\n      // 显示所有的文本\r\n      // 设置大小、填充颜色、名字、text()设置文本\r\n      // 使用 attr(\"text-anchor\", \"middle\")设置文本居中\r\n      var text = svg.append(\"g\")\r\n        .attr(\"class\", \"texts\")\r\n        .selectAll(\"text\")\r\n        .data(this.nodes)\r\n        .enter()\r\n        .append(\"text\").attr(\"font-size\", () => 13)\r\n        .attr(\"fill\", () => '#fff')\r\n        .attr('name', d => d.properties.name)\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .attr('x', function (d) {\r\n          return textBreaking(d3.select(this), d.properties.name)\r\n        })\r\n        .call(this.drag(simulation))\r\n        .on(\"click\", nodeClick)\r\n        .on('mouseenter', function (event) {\r\n          // console.dir(this)\r\n          const text = d3.select(this)\r\n          // // console.log(text)\r\n          // 获取被选中元素的名字\r\n          let name = text.attr(\"name\")\r\n          _this.$set(_this.selectNodeData, 'name', name)\r\n\r\n          // 根据文本名称获取节点的id\r\n          for (let item of _this.nodes) {\r\n            if (item.properties.name == name) {\r\n              // 设置节点id和标签属性\r\n              _this.$set(_this.selectNodeData, 'id', item.id)\r\n              _this.$set(_this.selectNodeData, 'properties', item.properties)\r\n              // 根据节点类型label获取节点颜色\r\n              let index = 0\r\n              switch (item.label) {\r\n                case _this.labels[0]: break;\r\n                case _this.labels[1]: index = 1;break;\r\n                case _this.labels[2]: index = 2;break;\r\n                default: index = 3;break;\r\n              }\r\n              _this.$set(_this.selectNodeData, 'color', _this.colors[index])\r\n            }\r\n          }\r\n          _this.changeGraphStyle(name)\r\n        })\r\n        .on('mouseleave', (event) => {\r\n          if(!this.isNodeClicked) {\r\n            this.clearGraphStyle()\r\n            // 如果此时有搜索关键字，则鼠标离开时保留原搜索选中的节点\r\n            if(this.keywords !== '') {\r\n              this.searchKeyWords()\r\n            }\r\n          }\r\n        })\r\n        .on('contextmenu', d3.contextMenu(this.menu))\r\n        // .call(d3.drag()\r\n        //   .on(\"start\", dragstarted)\r\n        //   .on(\"drag\", dragged)\r\n        //   .on(\"end\", dragended)\r\n        // )\r\n\r\n      // 圆增加title\r\n      node.append(\"title\").text(d => d.properties.name)\r\n\r\n      // simulation中ticked数据初始化并生成图形\r\n      simulation.on(\"tick\", ticked)\r\n\r\n      simulation.force(\"link\")\r\n        .links(this.links)\r\n        .distance(d => { // 每一边的长度\r\n          let distance = 20\r\n          switch(d.source.label) {\r\n            case _this.labels[0]: distance += 30;break;\r\n            case _this.labels[1]: distance += 25;break;\r\n            case _this.labels[2]: distance += 22;break;\r\n            default: distance += 20;break;\r\n          }\r\n          switch(d.target.label) {\r\n            case _this.labels[0]: distance += 30;break;\r\n            case _this.labels[1]: distance += 25;break;\r\n            case _this.labels[2]: distance += 22;break;\r\n            default: distance += 20;break;\r\n          }\r\n          return distance * 2\r\n        })\r\n\r\n      /******************************************\r\n       * 内部功能函数\r\n       * 包括：ticked、文本分隔、节点和文本的点击事件\r\n       */\r\n      // ticked()函数确定link线的起始点x、y坐标 node确定中心点 文本通过translate平移变化\r\n      function ticked() {\r\n        link\r\n          .attr(\"x1\", d => d.source.x)\r\n          .attr(\"y1\", d => d.source.y)\r\n          .attr(\"x2\", d => d.target.x)\r\n          .attr(\"y2\", d => d.target.y)\r\n\r\n        linksName\r\n          .attr('transform', d => {\r\n            let x = Math.min(d.source.x, d.target.x) + Math.abs(d.source.x - d.target.x) / 2\r\n            let y = Math.min(d.source.y, d.target.y) + Math.abs(d.source.y - d.target.y) / 2 - 1\r\n            // tanA = a / b\r\n            // A = arctan(tanA)\r\n            let tanA = Math.abs(d.source.y - d.target.y) / Math.abs(d.source.x - d.target.x)\r\n            let angle = Math.atan(tanA) / Math.PI * 180\r\n            // let angle = Math.atan2(1,1)/Math.PI*180\r\n            // // console.log(angle)\r\n            // 第一、二象限额外处理\r\n            if (d.source.x > d.target.x) {\r\n              // 第二象限\r\n              if (d.source.y <= d.target.y) {\r\n                angle = -angle\r\n              }\r\n              // else {  // 第三象限\r\n              //   angle = angle\r\n              // }\r\n            } else if (d.source.y > d.target.y) {\r\n              // 第一象限\r\n              angle = -angle\r\n            }\r\n            return 'translate(' + x + ',' + y + ')' + 'rotate(' + angle + ')'\r\n          })\r\n\r\n        node\r\n          .attr(\"cx\", d => d.x)\r\n          .attr(\"cy\", d => d.y)\r\n\r\n        text.attr('transform', function(d) {\r\n          let size = 15\r\n          switch(d.label){\r\n            case _this.labels[0]: break;\r\n            case _this.labels[1]: size = 14;break;\r\n            case _this.labels[2]: size = 13;break;\r\n            default: size = 12;break;\r\n          }\r\n          size -= 5\r\n          return 'translate(' + (d.x - size / 2 + 3) + ',' + (d.y + size / 2) + ')'\r\n        })\r\n      }\r\n\r\n      /**\r\n       * 文本分隔（根据字数在当前选择器中分隔三行，超过10字省略）\r\n       * @method textBreaking\r\n       * @param {d3text} 文本对应的DOM对象\r\n       * @param {text} 节点名称的文本值\r\n       * @return {void}\r\n       */\r\n      function textBreaking(d3text, text) {\r\n        const len = text.length\r\n        if (len <= 3) {\r\n          d3text.append('tspan')\r\n            .attr('x', 0)\r\n            .attr('y', 2)\r\n            .text(text)\r\n        } else {\r\n          const topText = text.substring(0, 3)\r\n          const midText = text.substring(3, 7)\r\n          let botText = text.substring(7, len)\r\n          let topY = -16\r\n          let midY = 0\r\n          let botY = 16\r\n          if (len <= 7) {\r\n            topY += 10\r\n            midY += 10\r\n          } else if (len > 10){\r\n            botText = text.substring(7, 9) + '...'\r\n          }\r\n\r\n          d3text.text('')\r\n          d3text.append('tspan')\r\n            .attr('x', 0)\r\n            .attr('y', topY)\r\n            .text(function () {\r\n              return topText\r\n            })\r\n          d3text.append('tspan')\r\n            .attr('x', 0)\r\n            .attr('y', midY)\r\n            .text(function () {\r\n              return midText\r\n            })\r\n          d3text.append('tspan')\r\n            .attr('x', 0)\r\n            .attr('y', botY)\r\n            .text(function () {\r\n              return botText\r\n            })\r\n        }\r\n      }\r\n      // 分别定义节点和文本的点击事件\r\n      // 优化：由于点击前必定触发mouseenter事件，所以不用再去查找节点id\r\n      //      直接根据this.selectNodeData拿到节点信息\r\n      // 优化后：只需定义一个点击事件即可\r\n      function nodeClick(event, d) {\r\n        // // console.log('node clicked!')\r\n        // sticked用于固定节点（无法实现节点固定功能）\r\n        // delete d.fx\r\n        // delete d.fy\r\n        // d3.select(this).classed(\"fixed\", true)\r\n        // simulation.alpha(1).restart()\r\n\r\n        // 获取被选中元素信息\r\n        // const node = d3.select(this)\r\n        // let name = node.attr(\"name\")\r\n        // let id = node.attr(\"id\")\r\n        // let color = node.attr('fill')\r\n        // // console.log(name, id, color)\r\n\r\n        // 直接通过this.selectNodeData拿到节点信息\r\n        event.cancelBubble = true\r\n        event.stopPropagation() // 阻止事件冒泡\r\n\r\n        const name = _this.selectNodeData.name\r\n        _this.isNodeClicked = true\r\n        _this.changeGraphStyle(name)\r\n\r\n        return false\r\n      }\r\n    },\r\n    // 根据当前节点名称来更改图样式\r\n    changeGraphStyle (name) {\r\n      // // console.log(this.isNodeClicked)\r\n      // 选择#svg1 .nodes中所有的circle，再增加个class\r\n      this.svgDom.select('.nodes').selectAll('circle').attr('class', d => {\r\n        // 节点属性name是否等于name，返回fixed（激活选中样式）\r\n        if(d.properties.name == name) {\r\n          return 'fixed'\r\n        }\r\n        // 当前节点返回空，否则其他节点循环判断是否被隐藏起来(CSS设置隐藏)\r\n        else {\r\n          // links链接的起始节点进行判断,如果其id等于name则显示这类节点\r\n          // 注意: graph = data\r\n          for (var i = 0; i < this.links.length; i++) {\r\n            // 如果links的起点等于name，并且终点等于正在处理的则显示\r\n            if (this.links[i]['source'].properties.name == name && this.links[i]['target'].id == d.id) {\r\n                return 'active'\r\n            }\r\n            if (this.links[i]['target'].properties.name == name && this.links[i]['source'].id == d.id) {\r\n                return 'active'\r\n            }\r\n          }\r\n          return this.isNodeClicked ? 'inactive' : ''\r\n        }\r\n      })\r\n      // 处理相邻的文字是否隐藏\r\n      this.svgDom.select('.texts').selectAll('text')\r\n        .attr('class', d => {\r\n          // 节点属性name是否等于name，返回fixed（激活选中样式）\r\n          if(d.properties.name == name) {\r\n            return ''\r\n          }\r\n          // 当前节点返回空，否则其他节点循环判断是否被隐藏起来(CSS设置隐藏)\r\n          else {\r\n            // links链接的起始节点进行判断,如果其id等于name则显示这类节点\r\n            // 注意: graph = data\r\n            for (var i = 0; i < this.links.length; i++) {\r\n              // 如果links的起点等于name，并且终点等于正在处理的则显示\r\n              if (this.links[i]['source'].properties.name == name && this.links[i]['target'].id == d.id) {\r\n                  return ''\r\n              }\r\n              if (this.links[i]['target'].properties.name == name && this.links[i]['source'].id == d.id) {\r\n                  return ''\r\n              }\r\n            }\r\n            return this.isNodeClicked ? 'inactive' : ''\r\n          }\r\n        })\r\n      // 处理相邻的边line是否隐藏 注意 ||\r\n      this.svgDom.select(\".links\").selectAll('line')\r\n        .attr('class', d => {\r\n          if (d.source.properties.name == name || d.target.properties.name == name) {\r\n              return 'active'\r\n          } else {\r\n              return this.isNodeClicked ? 'inactive' : ''\r\n          }\r\n        })\r\n        .attr('marker-end', d => {\r\n          if (d.source.properties.name == name || d.target.properties.name == name) {\r\n            return 'url(#posActMarker)'\r\n          } else {\r\n            return 'url(#posMarker)'\r\n          }\r\n        })\r\n      // 处理相邻的边上文字是否隐藏 注意 ||\r\n      this.svgDom.select(\".linkTexts\").selectAll('text')\r\n        .attr('class', d => {\r\n          if (d.source.properties.name == name || d.target.properties.name == name) {\r\n              return 'active'\r\n          } else {\r\n              return this.isNodeClicked ? 'inactive' : ''\r\n          }\r\n        })\r\n    },\r\n    clearGraphStyle () {\r\n      // 移除所有样式\r\n      this.svgDom.select('.nodes').selectAll('circle').attr('class', '')\r\n      this.svgDom.select(\".texts\").selectAll('text').attr('class', '')\r\n      this.svgDom.select('.links').selectAll('line').attr('class', '').attr('marker-end', 'url(#posMarker)')\r\n      this.svgDom.select(\".linkTexts\").selectAll('text').attr('class', '')\r\n      // d3.select(this).attr('class', '')\r\n    },\r\n    drag(simulation) {\r\n      function dragsubject(event) {\r\n        return simulation.find(event.x, event.y);\r\n      }\r\n\r\n      function dragstarted(event) {\r\n        if (!event.active) simulation.alphaTarget(0.3).restart();\r\n        event.subject.fx = event.subject.x;\r\n        event.subject.fy = event.subject.y;\r\n      }\r\n\r\n      function dragged(event) {\r\n        event.subject.fx = event.x;\r\n        event.subject.fy = event.y;\r\n      }\r\n\r\n      function dragended(event) {\r\n        if (!event.active) simulation.alphaTarget(0);\r\n        // 注释以下代码，使拖动结束后固定节点\r\n        // event.subject.fx = null;\r\n        // event.subject.fy = null;\r\n      }\r\n\r\n      return d3.drag()\r\n        .subject(dragsubject)\r\n        .on(\"start\", dragstarted)\r\n        .on(\"drag\", dragged)\r\n        .on(\"end\", dragended)\r\n    },\r\n    // 绘制关系箭头\r\n    addMarkers() {\r\n      // 定义箭头的标识\r\n      var defs = this.svgDom.append(\"defs\")\r\n      const posMarker = defs.append(\"marker\")\r\n        .attr(\"id\", \"posMarker\")\r\n        .attr(\"orient\", \"auto\")\r\n        .attr(\"stroke-width\", 2)\r\n        .attr(\"markerUnits\", \"strokeWidth\")\r\n        .attr(\"markerUnits\", \"userSpaceOnUse\")\r\n        .attr(\"viewBox\", \"0 -5 10 10\")\r\n        .attr(\"refX\", 31)\r\n        .attr(\"refY\", 0)\r\n        .attr(\"markerWidth\", 12)\r\n        .attr(\"markerHeight\", 12)\r\n        .append(\"path\")\r\n        .attr(\"d\", \"M 0 -5 L 10 0 L 0 5\")\r\n        .attr('fill', '#e0cac1')\r\n        .attr(\"stroke-opacity\", 0.6);\r\n      const posActMarker = defs.append(\"marker\")\r\n        .attr(\"id\", \"posActMarker\")\r\n        .attr(\"orient\", \"auto\")\r\n        .attr(\"stroke-width\", 2)\r\n        .attr(\"markerUnits\", \"strokeWidth\")\r\n        .attr(\"markerUnits\", \"userSpaceOnUse\")\r\n        .attr(\"viewBox\", \"0 -5 10 10\")\r\n        .attr(\"refX\", 31)\r\n        .attr(\"refY\", 0)\r\n        .attr(\"markerWidth\", 12)\r\n        .attr(\"markerHeight\", 12)\r\n        .append(\"path\")\r\n        .attr(\"d\", \"M 0 -5 L 10 0 L 0 5\")\r\n        .attr('fill', '#1E90FF')\r\n        .attr(\"stroke-opacity\", 0.6);\r\n      // const negMarker = defs.append(\"marker\")\r\n      //   .attr(\"id\",\"negMarker\")\r\n      //   .attr(\"orient\",\"auto\")\r\n      //   .attr(\"stroke-width\",2)\r\n      //   .attr(\"markerUnits\", \"strokeWidth\")\r\n      //   .attr(\"markerUnits\", \"userSpaceOnUse\")\r\n      //   .attr(\"viewBox\", \"0 -5 10 10\")\r\n      //   .attr(\"refX\", -25)\r\n      //   .attr(\"refY\", 0)\r\n      //   .attr(\"markerWidth\", 12)\r\n      //   .attr(\"markerHeight\", 12)\r\n      //   .append(\"path\")\r\n      //   .attr(\"d\", \"M 10 -5 L 0 0 L 10 5\")\r\n      //   .attr('fill', '#999')\r\n      //   .attr(\"stroke-opacity\", 0.6);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import '@/plugins/d3-context-menu';\r\n$opacity: 0.15;  /* 显示的不透明度 */\r\n$activeColor: #1E90FF;  /* 激活的颜色 */\r\nsvg {\r\n  width:1250px;\r\n  height:870px;\r\n margin-left: 250px;\r\n margin-bottom: 0px;\r\n  border: 6px white solid;\r\n}\r\n/*设置节点及边的样式*/\r\n.links line {\r\n  stroke: #e0cac1b2; // #bbb\r\n  stroke-opacity: 1;\r\n  &.inactive {\r\n    /* display: none !important; */\r\n    opacity: $opacity;\r\n  }\r\n  &.active {\r\n    stroke: $activeColor;\r\n    stroke-width: 3px;\r\n  }\r\n  &.hide {\r\n    display: none !important;\r\n  }\r\n}\r\n.nodes circle {\r\n  // stroke: #000;\r\n  // stroke-width: 1.5px;\r\n  &.fixed {\r\n    // fill: rgb(102, 81, 81);\r\n    stroke: #FFC0CB;  // #888;\r\n    stroke-width: 14px;\r\n    stroke-opacity: $opacity + 0.3;\r\n    border: 10px #000 solid;\r\n  }\r\n  &.inactive {\r\n    /* display: none !important; */\r\n    opacity: $opacity;\r\n  }\r\n  &.active {\r\n    stroke: $activeColor;\r\n    stroke-width: 4px;\r\n  }\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n  &.hide {\r\n    display: none !important;\r\n  }\r\n}\r\n.texts text {\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  user-select: none;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n  &.inactive {\r\n    /* display: none !important; */\r\n    opacity: $opacity;\r\n  }\r\n}\r\n.linkTexts text {\r\n  stroke:#B2BFC3; // #bbb\r\n  stroke-opacity: 1;\r\n  &.active {\r\n    stroke: $activeColor;\r\n  }\r\n  &.inactive {\r\n    /* display: none !important; */\r\n    opacity: $opacity;\r\n  }\r\n}\r\n// #positiveMarker path {\r\n//   fill: #fff;\r\n// }\r\n</style>\r\n<style lang=\"scss\" scoped>\r\n@media only screen and (max-width: 1125px){\r\n  #info, #mode {\r\n    display: none !important;\r\n  }\r\n}\r\n.font-sky {\r\n  font-size: 18px;\r\n  color: #034c6a !important;\r\n}\r\n#indicator1 {\r\n // width: 262px;\r\n // position:absolute;\r\n // //border-top:6px solid white;\r\n // //margin:0px;\r\n // //margin-left:0px;\r\n // //box-sizing: border-box;\r\n //padding-top:200px;\r\n //padding-left: 30px;\r\n   left: 50px;\r\n // // bottom: 30px;\r\n // left: 0vw;\r\n // bottom: 3vw;\r\n  text-align: left;\r\n  color: #f2f2f2;\r\n  font-size: 18px;\r\n  font-weight:bolder;\r\n\r\n  & > div {\r\n    margin-bottom: 4px;\r\n    color:#1E3547;\r\n  }\r\n  span {\r\n    border-radius: 10px 10px 10px 10px;\r\n    display: inline-block;\r\n    width: 32px;\r\n    height: 26px;\r\n    position: relative;\r\n    top: 2px;\r\n    margin-right: 8px;\r\n  }\r\n}\r\n\r\n#indicator2 {\r\n  width: 262px;\r\n  position:absolute;\r\n  border-top:6px solid white;\r\n  margin:0px;\r\n  margin-left:0px;\r\n  box-sizing: border-box;\r\n  padding-top:46px;\r\n  padding-left: 30px;\r\n  // left: 50px;\r\n  // bottom: 30px;\r\n  left: 0vw;\r\n  bottom: 3vw;\r\n  text-align: left;\r\n  color: #f2f2f2;\r\n  font-size: 23px;\r\n  font-weight:bolder;\r\n\r\n  & > div {\r\n    margin-bottom: 4px;\r\n    color:#1E3547;\r\n  }\r\n  span {\r\n    border-radius: 10px 10px 10px 10px;\r\n    display: inline-block;\r\n    width: 32px;\r\n    height: 26px;\r\n    position: relative;\r\n    top: 2px;\r\n    margin-right: 8px;\r\n  }\r\n}\r\n\r\n/*mode选项样式*/\r\n#mode {\r\n  position: absolute;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  top: 40px;\r\n  left: 30px;\r\n  .gState span {\r\n    display: inline-block;\r\n    border: 1px solid #fff;\r\n    color: #fff;\r\n    padding: 6px 10px;\r\n    border-radius: 4px;\r\n    font-size: 14px;\r\n    transition: color, background-color .3s;\r\n    -o-transition: color, background-color .3s;\r\n    -ms-transition: color, background-color .3s;\r\n    -moz-transition: color, background-color .3s;\r\n    -webkit-transition: color, background-color .3s;\r\n    ~ .active, ~ :hover {\r\n      background-color: #fff;\r\n      color: #333;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  .gState span.active, .gState span:hover {\r\n    background-color: #fff;\r\n    color: #333;\r\n    cursor: pointer;\r\n  }\r\n}\r\n/*悬浮节点的info样式*/\r\n#info {\r\n  position:fixed;\r\n  bottom:0px;\r\n  right: 1px;\r\n  //font-weight: normal;\r\n  width: 530px;\r\n  .node-card {\r\n    border: 1px solid #9faecf;\r\n    background-color: #00aeff6b;\r\n    color: #fff;\r\n    text-align: left;\r\n    // transition: background-color;\r\n    // transition-delay: .3s;\r\n    // transition-timing-function: ease;\r\n    .el-card__header {\r\n      border-bottom: 1px solid #50596d;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./d3graph.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./d3graph.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./d3graph.vue?vue&type=template&id=ab638932&scoped=true\"\nimport script from \"./d3graph.vue?vue&type=script&lang=js\"\nexport * from \"./d3graph.vue?vue&type=script&lang=js\"\nimport style0 from \"./d3graph.vue?vue&type=style&index=0&id=ab638932&prod&lang=scss\"\nimport style1 from \"./d3graph.vue?vue&type=style&index=1&id=ab638932&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ab638932\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div class=\"gContainer\">\r\n    <!-- <d3graph /> -->\r\n    <gSearch @getData=\"update\" />\r\n    <d3graph\r\n      :data=\"data\"\r\n      :names=\"names\"\r\n      :labels=\"labels\"\r\n      :linkTypes=\"linkTypes\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport gSearch from '@/components/gSearch.vue'\r\nimport d3graph from '@/components/d3graph.vue'\r\nexport default {\r\n  components: {\r\n    gSearch,\r\n    d3graph\r\n  },\r\n  data () {\r\n    return {\r\n      // d3jsonParser()处理 json 后返回的结果\r\n      data: {\r\n        nodes: [],\r\n        links: []\r\n      },\r\n      // names: ['原        告', '案        号', '案        由', '争议焦点', '被        告', '省        份', '类        型', '案件类型', '审理法院', '审理程序', '文书类型', '案件简介', '判决结果', '审结日期', '判决主要依据'],\r\n      // labels: ['原告', '案号', '案由', '争议焦点', '被告', '省份', '类型', '案件类型', '审理法院', '审理程序', '文书类型', '案件简介', '判决结果', '审结日期', '判决主要依据'],\r\n      // linkTypes: ['', '案号', '案由', '争议焦点', '被告', '省份', '类型', '案件类型', '审理法院', '审理程序', '文书类型', '案件简介', '判决结果', '审结日期', '判决主要依据']\r\n      names: ['Problem', 'Knowledge Field', 'Knowledge Class', 'Data Source'],\r\n      labels: ['Problem', 'Knowledge Field', 'Knowledge Class', 'Data Source'],\r\n      linkTypes: ['', 'can_use', 'is_stored_in', 'provides']\r\n      // linkTypes: []\r\n    }\r\n  },\r\n  methods: {\r\n    // 视图更新\r\n    update (json) {\r\n      // console.log('update')\r\n      // // console.log(json)\r\n      this.d3jsonParser(json)\r\n    },\r\n    /*eslint-disable*/\r\n    // 解析json数据，主要负责数据的去重、标准化\r\n    d3jsonParser (json) {\r\n      const nodes =[]\r\n      const links = [] // 存放节点和关系\r\n      const nodeSet = [] // 存放去重后nodes的id\r\n      console.log('links',links.toLocaleString())\r\n\r\n      // 使用vue直接通过require获取本地json，不再需要使用d3.json获取数据\r\n      // d3.json('./../data/records.json', function (error, data) {\r\n      //   if (error) throw error\r\n      //   graph = data\r\n      //   // console.log(graph[0].p)\r\n      // })\r\n\r\n      for (let item of json) {\r\n        for (let segment of item.p.segments) {\r\n          // 重新更改data格式\r\n          if (nodeSet.indexOf(segment.start.identity) == -1) {\r\n            nodeSet.push(segment.start.identity)\r\n            nodes.push({\r\n              id: segment.start.identity,\r\n              label: segment.start.labels[0],\r\n              properties: segment.start.properties\r\n            })\r\n          }\r\n          if (nodeSet.indexOf(segment.end.identity) == -1) {\r\n            nodeSet.push(segment.end.identity)\r\n            nodes.push({\r\n              id: segment.end.identity,\r\n              label: segment.end.labels[0],\r\n              properties: segment.end.properties\r\n            })\r\n          }\r\n          links.push({\r\n            source: segment.relationship.start,\r\n            target: segment.relationship.end,\r\n            type: segment.relationship.type,\r\n            properties: segment.relationship.properties\r\n          })\r\n        }\r\n      }\r\n      // console.log(nodes)\r\n      // console.log(links)\r\n      // this.links = links\r\n      // this.nodes = nodes\r\n      this.data = { nodes, links }\r\n      // return { nodes, links }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.gContainer {\r\n  position: relative;\r\n  border: 2px #000 solid;\r\n  background-color:#D1E2F2;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./2dView.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./2dView.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./2dView.vue?vue&type=template&id=5669f832&scoped=true\"\nimport script from \"./2dView.vue?vue&type=script&lang=js\"\nexport * from \"./2dView.vue?vue&type=script&lang=js\"\nimport style0 from \"./2dView.vue?vue&type=style&index=0&id=5669f832&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5669f832\",\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\nimport Home from '../views/2dView.vue'\r\n\r\nVue.use(VueRouter)\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'Home',\r\n    component: Home,\r\n    meta: {\r\n      tile: 'Human-Robot Interaction (HRI) Data Model'\r\n    }\r\n  }\r\n  // {\r\n  //   path: '/3dView',\r\n  //   name: '3dView',\r\n  //   // route level code-splitting\r\n  //   // this generates a separate chunk (about.[hash].js) for this route\r\n  //   // which is lazy-loaded when the route is visited.\r\n  //   component: () => import(/* webpackChunkName: \"about\" */ '../views/3dView.vue')\r\n  // }\r\n]\r\n\r\nconst router = new VueRouter({\r\n  routes\r\n})\r\n\r\nexport default router\r\n","import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n  },\r\n  mutations: {\r\n  },\r\n  actions: {\r\n  },\r\n  modules: {\r\n  }\r\n})\r\n","import Vue from 'vue'\r\n// 导入ElementUI\r\nimport ElementUI from 'element-ui'\r\nimport 'element-ui/lib/theme-chalk/index.css'\r\n\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport store from './store'\r\n\r\nVue.use(ElementUI)\r\nVue.config.productionTip = false\r\n\r\nnew Vue({\r\n  router,\r\n  store,\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./d3graph.vue?vue&type=style&index=1&id=ab638932&prod&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./2dView.vue?vue&type=style&index=0&id=5669f832&prod&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./gSearch.vue?vue&type=style&index=0&id=98e99b2e&prod&lang=scss&scoped=true\""],"sourceRoot":""}